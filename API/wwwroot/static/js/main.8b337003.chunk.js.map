{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/widthStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","i18n.js","app/common/form/TextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/TextArea.tsx","app/common/form/SelectInput.tsx","app/common/select_options/categoryOptions.ts","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/image_upload/PhotoWidgetDropzone.tsx","app/common/image_upload/PhotoWidgetCropper.tsx","app/common/image_upload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileBody.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/util/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","axiosRequestConfig","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","config","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","register","user","login","current","facebookLogin","accessToken","refreshToken","resendVerificationEmail","email","verifyEmail","emailVerificationToken","Profiles","username","listFollowings","predicate","listActivities","uploadPhoto","file","formData","FormData","append","setMainPhoto","profile","updateFollowing","deletePhoto","Profile","displayName","image","ActivityStore","activities","Map","selectedActivity","loading","loadingInitial","pagingParams","set","setActivity","isGoing","attendees","some","attendee","isHost","hostUsername","host","find","Date","deleteActivity","setSelectedActivity","setSelectedActivityAttendees","setSelectedActivityIsGoing","setSelectedActivityIsCancelled","isCancelled","setLoading","state","setLoadingInitial","setPagination","setPagingParams","setPredicate","value","forEach","detail","console","log","axiosParams","result","newActivity","runInAction","updatedActivity","filter","updateAttendeeFollowing","following","followersCount","cancel","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","activityA","activityB","getTime","entries","activitiesByDate","reduce","format","URLSearchParams","toString","toISOString","ProfileStore","mainLoading","followingsLoading","uploading","followings","activeTab","profileActivities","loadingActivities","setProfile","setProfileFollowersCount","count","setProfileFollowingCount","followingCount","filterProfilePhoto","photoId","photos","p","setProfileFollowing","pushProfilePhoto","photo","setProfileMainPhoto","isMain","iPhoto","setMainLoading","setFollowingsLoading","setUploading","setFollowings","profiles","setActiveTab","setProfileActivities","setLoadingActivities","handleFollowingChange","load","loadFollowings","loadProfileActivities","setUserImage","setDisplayName","activityStore","UserStore","facebookAccessToken","facebookLoading","refreshTokenTimeout","setUser","name","setFacebookLoading","setRefreshTokenTimeout","getUser","setToken","startRefreshTokenTimer","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","credentials","modalStore","close","creds","apiLogin","catch","scope","stopRefreshTokenTimer","localStorage","removeItem","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","WidthStore","isMobile","setIsMobile","innerWidth","getItem","appLoaded","setAppLoaded","setItem","modal","open","content","profileStore","commentStore","hubConnection","activityComments","setHubConnection","setActivityComments","activityComment","createdAt","unshiftActivityComments","unshift","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","stopHubConnection","stop","clearComments","addComment","invoke","widthStore","StoreContext","createContext","useStore","useContext","observer","useTranslation","t","i18n","isLoggedIn","useState","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","size","Button","Link","positive","onClick","language","changeLanguage","src","alt","style","marginLeft","position","Image","avatar","spaced","Dropdown","pointing","text","icon","Reveal","animated","Content","visible","fluid","color","hidden","mouseEvent","syntheticEvent","preventDefault","Card","Header","Description","bio","length","substring","truncateBio","extra","followingStyle","borderColor","borderWidth","List","horizontal","map","Popup","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityFilters","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","locales","en","es","i18next","I18NextHttpBackend","I18nextBrowserLanguageDetector","fallbackLng","debug","detection","order","cache","interpolation","isDate","locale","formatDate","formatDistanceToNow","escapeValue","TextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","validationSchema","Yup","required","isValid","dirty","styles","float","Row","verticalAlign","Divider","link","height","LoadingComponent","Dimmer","TextArea","SelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","DateInput","selected","useHistory","useParams","formActivity","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","keyboardEvent","shiftKey","Comment","comment","Avatar","Author","Metadata","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","padding","zIndex","top","ribbon","relaxed","divided","Extra","NotFound","Inline","primary","message","Modal","onClose","setEditMode","isProfileFromCurrentUser","editMode","Tab","Pane","panes","menuItem","pane","menu","onTabChange","e","tabProps","activeIndex","itemsPerRow","objectFit","Meta","PhotoWidgetDropzone","setFiles","dropzoneDefaultStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","onUpload","getCroppedCanvas","toBlob","blob","revokeObjectURL","widths","overflow","target","setTarget","addPhotoMode","setAddPhotoMode","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","routeProps","routeComponentProps","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","Verifying","Failed","Success","setStatus","handleVerificationEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.8b337003.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, ProfileActivity } from '../models/profile';\r\nimport { User, UserLogin } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(axiosRequestConfig => {\r\n    const token = store.commonStore.token;\r\n    if (token) axiosRequestConfig.headers.Authorization = `Bearer ${token}`;\r\n    return axiosRequestConfig;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    } else {\r\n        return response;\r\n    }\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            } else if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('not-found');\r\n            }\r\n            else if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    modalStateErrors.push(data.errors[key])\r\n                }\r\n\r\n                throw modalStateErrors.flat();\r\n            }\r\n\r\n            break;\r\n        case 401:\r\n            if (headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired...');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('activities', { params }).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete<void>(`activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    register: (user: UserLogin) => requests.post<User>('account/register', user),\r\n    login: (user: UserLogin) => requests.post<User>('account/login', user),\r\n    current: () => requests.get<User>('account'),\r\n    facebookLogin: (accessToken: string) => requests.post<User>(`account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('account/refreshToken', {}),\r\n    resendVerificationEmail: (email: string) => requests.get(`account/resendEmailConfirmationLink?email=${email}`),\r\n    verifyEmail: (emailVerificationToken: string, email: string) => \r\n        requests.post<void>(`account/verifyEmail?emailVerificationToken=${emailVerificationToken}&email=${email}`, {}),\r\n}\r\n\r\nconst Profiles = {\r\n    details: (username: string) => requests.get<Profile>(`profiles/${username}`),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<ProfileActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`photos/${id}`, {}),\r\n    update: (profile: Partial<Profile>) => requests.put(`/profiles`, profile), // because only updating 2 properties of 'Profile' use Partial<>\r\n    updateFollowing: (username: string) => requests.post(`follow/${username}`, {}),\r\n    deletePhoto: (id: string) => requests.delete(`photos/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    })\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface ProfileActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activities = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activities.clear();\r\n                this.list();\r\n            }\r\n        )\r\n    }\r\n\r\n    setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                attendee => attendee.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(attendee => attendee.username === activity.hostUsername)\r\n        }\r\n\r\n        activity.date = new Date(activity.date!)\r\n        this.activities.set(activity.id, activity);\r\n    }\r\n\r\n    deleteActivity = (id: string) => {\r\n        this.activities.delete(id);\r\n    }\r\n\r\n    setSelectedActivity = (activity: Activity | undefined) => {\r\n        this.selectedActivity = activity;\r\n    }\r\n\r\n    setSelectedActivityAttendees = (attendees: Profile[]) => {\r\n        this.selectedActivity!.attendees = attendees;\r\n    }\r\n\r\n    setSelectedActivityIsGoing = (isGoing: boolean) => {\r\n        this.selectedActivity!.isGoing = isGoing;\r\n    }\r\n\r\n    setSelectedActivityIsCancelled = (isCancelled: boolean) => {\r\n        this.selectedActivity!.isCancelled = isCancelled;\r\n    }\r\n\r\n    setLoading = (state: boolean) => {\r\n        this.loading = state;\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n\r\n        switch (predicate) {\r\n            case 'startDate':\r\n                this.predicate.delete(predicate);\r\n                this.predicate.set(predicate, value);\r\n                break;\r\n            default:\r\n                resetPredicate();\r\n                this.predicate.set(predicate, true);\r\n        }\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activities.values())\r\n            .sort((activityA, activityB) => activityA.date!.getTime() - activityB.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');//.toISOString().split('T')[0];\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n\r\n        return params;\r\n    }\r\n\r\n    detail = async (id: string) => {\r\n        let activity = this.activities.get(id);\r\n\r\n        if (activity) {\r\n            this.setSelectedActivity(activity);\r\n            return activity;\r\n        } else {\r\n            this.setLoadingInitial(true);\r\n\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n\r\n                this.setActivity(activity);\r\n                this.setSelectedActivity(activity);\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        this.setLoadingInitial(false);\r\n    }\r\n\r\n    list = async () => {\r\n        this.setLoadingInitial(true);\r\n\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            })\r\n\r\n            this.setPagination(result.pagination);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoadingInitial(false);\r\n    }\r\n\r\n    create = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            this.setSelectedActivity(newActivity);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    update = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.detail(activity.id), ...activity }\r\n                    this.activities.set(activity.id, updatedActivity as unknown as Activity);\r\n                    this.setSelectedActivity(updatedActivity as unknown as Activity);\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    attend = async () => {\r\n        this.setLoading(true);\r\n        \r\n        const user = store.userStore.user;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            if (this.selectedActivity?.isGoing) {\r\n                this.setSelectedActivityAttendees(this.selectedActivity!.attendees?.filter(a => a.username !== user?.username)!);\r\n                this.setSelectedActivityIsGoing(false);\r\n            } else {\r\n                const attendee = new Profile(user!);\r\n                const attendees = this.selectedActivity?.attendees!;\r\n                attendees.push(attendee);\r\n                this.setSelectedActivityAttendees(attendees);\r\n                this.setSelectedActivityIsGoing(false);\r\n            }\r\n\r\n            this.setActivity(this.selectedActivity!);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activities.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    cancel = async () => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n            this.setSelectedActivityIsCancelled(!this.selectedActivity?.isCancelled);\r\n            this.setActivity(this.selectedActivity!);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    delete = async (id: string) => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Activities.delete(id);\r\n\r\n            this.deleteActivity(id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, ProfileActivity } from \"../models/profile\"\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loading = false;\r\n    mainLoading = false;\r\n    followingsLoading = false;\r\n    uploading = false;\r\n    followings: Profile[] = [];\r\n    activeTab = 0;;\r\n    profileActivities: ProfileActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                switch (activeTab) {\r\n                    case 3:\r\n                        this.loadFollowings('followers');\r\n                        break;\r\n                    case 4:\r\n                        this.loadFollowings('following');\r\n                        break;\r\n                    default:\r\n                        this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setProfile = (profile: Profile) => {\r\n        this.profile = profile;\r\n    }\r\n\r\n    setProfileFollowersCount = (count: number) => {\r\n        this.profile!.followersCount = count;\r\n    }\r\n\r\n    setProfileFollowingCount = (count: number) => {\r\n        this.profile!.followingCount = count;\r\n    }\r\n\r\n    filterProfilePhoto = (photoId: string) => {\r\n        if (this.profile) {\r\n            this.profile.photos = this.profile.photos?.filter(p => p.id !== photoId);\r\n        }\r\n    }\r\n\r\n    setProfileFollowing = (state: boolean) => {\r\n        this.profile!.following = state;\r\n    } \r\n\r\n    pushProfilePhoto = (photo: Photo) => {\r\n        this.profile?.photos?.push(photo);\r\n    }\r\n\r\n    setProfileMainPhoto = (photo: Photo) => {\r\n        if (this.profile && this.profile.photos) {\r\n            this.profile.photos.find(photo => photo.isMain)!.isMain = false;\r\n            this.profile.photos.find(iPhoto => iPhoto.id === photo.id)!.isMain = true;\r\n            this.profile.image = photo.url;\r\n        }\r\n    }\r\n\r\n    setLoading = (state: boolean) => {\r\n        this.loading = state;\r\n    }\r\n\r\n    setMainLoading = (state: boolean) => {\r\n        this.mainLoading = state;\r\n    }\r\n\r\n    setFollowingsLoading = (state: boolean) => {\r\n        this.followingsLoading = state;\r\n    }\r\n\r\n    setUploading = (state: boolean) => {\r\n        this.uploading = state;\r\n    }\r\n\r\n    setFollowings = (profiles: Profile[]) => {\r\n        this.followings = profiles;\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    setProfileActivities = (profileActivities: ProfileActivity[]) => {\r\n        this.profileActivities = profileActivities;\r\n    }\r\n\r\n    setLoadingActivities = (state: boolean) => {\r\n        this.loadingActivities = state;\r\n    }\r\n\r\n    handleFollowingChange = (username: string) => {\r\n        this.followings.forEach(profile => {\r\n            if (profile.username === username) {\r\n                profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                profile.following = !profile.following;\r\n            }\r\n        })\r\n    }\r\n\r\n    // this is called computed property\r\n    get isProfileFromCurrentUser() {\r\n        return store.userStore.user && this.profile\r\n            ? store.userStore.user.username === this.profile.username\r\n            : false;\r\n    }\r\n\r\n    load = async (username: string) => {\r\n        this.setLoading(true);\r\n\r\n        try {\r\n            this.setProfile(await agent.Profiles.details(username));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.setFollowingsLoading(true);\r\n\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            this.setFollowings(followings);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setFollowingsLoading(false);\r\n    }\r\n    \r\n    loadProfileActivities = async (username: string, predicate?: string) => {\r\n        this.setLoadingActivities(true);\r\n\r\n        try {\r\n            this.setProfileActivities(await agent.Profiles.listActivities(username, predicate!));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoadingActivities(false);\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.setUploading(true);\r\n\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n\r\n            if (this.profile) {\r\n                this.pushProfilePhoto(photo);\r\n\r\n                if (photo.isMain && store.userStore.user) {\r\n                    store.userStore.setUserImage(photo.url);\r\n                    this.profile.image = photo.url;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setUploading(false);\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n\r\n            store.userStore.setUserImage(photo.url);\r\n\r\n            if (this.profile && this.profile.photos) {\r\n                this.setProfileMainPhoto(photo);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    update = async (profile: Partial<Profile>) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.update(profile);\r\n\r\n            if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                store.userStore.setDisplayName(profile.displayName);\r\n            }\r\n\r\n            this.setProfile({ ...this.profile, ...profile as Profile });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n\r\n            if (this.profile) {\r\n                if (this.profile.username === store.userStore.user?.username) {\r\n                    this.setProfileFollowingCount(\r\n                        following\r\n                            ? this.profile.followingCount + 1\r\n                            : this.profile.followingCount - 1);\r\n                } else if (this.profile.username === username) {\r\n                    this.setProfileFollowersCount(\r\n                        following\r\n                            ? this.profile.followersCount + 1\r\n                            : this.profile.followersCount - 1);\r\n                    this.setProfileFollowing(!this.profile.following);\r\n                }\r\n            }\r\n\r\n            this.handleFollowingChange(username);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n\r\n            this.filterProfilePhoto(photo.id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserLogin } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    facebookAccessToken: string | null = null;\r\n    facebookLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUser = (user: User) => {\r\n        this.user = user;\r\n    }\r\n\r\n    setUserImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    setFacebookLoading = (state: boolean) => {\r\n        this.facebookLoading = state;\r\n    }\r\n\r\n    setRefreshTokenTimeout = (refreshTokenTimeout: any) => {\r\n        this.refreshTokenTimeout = refreshTokenTimeout;\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            this.setUser(user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.facebookAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    register = async (credentials: UserLogin) => {\r\n        try {\r\n            await agent.Account.register(credentials);\r\n            history.push(`/account/registerSuccess?email=${credentials.email}`);\r\n            store.modalStore.close();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    login = async (creds: UserLogin) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            this.setUser(user);\r\n            history.push('/activities');\r\n            store.modalStore.close();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.setFacebookLoading(true);\r\n\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.facebookLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                this.setUser(user);\r\n                this.setFacebookLoading(false);\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.setFacebookLoading(false);\r\n            })\r\n        }\r\n\r\n        if (this.facebookAccessToken) {\r\n            apiLogin(this.facebookAccessToken);\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, { scope: 'public_profile,email' })\r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            this.setUser(user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    private startRefreshTokenTimer(user: User) {\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n\r\n        this.setRefreshTokenTimeout(setTimeout(this.refreshToken, timeout));\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class WidthStore {\r\n    isMobile: boolean = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsMobile = (isMobile: boolean) => {\r\n        this.isMobile = isMobile;\r\n    }\r\n\r\n    handleWindowSizeChange() {\r\n        // console.log(window.innerWidth);\r\n        // const isMobile: boolean = window.innerWidth <= 768;\r\n        // this.setIsMobile(isMobile);\r\n        this.isMobile = window.innerWidth <= 768;\r\n        console.log(this.isMobile);\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\nimport WidthStore from \"./widthStore\";\r\n\r\ninterface Store {\r\n    commonStore: CommonStore;\r\n    activityStore: ActivityStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n    widthStore: WidthStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore(),\r\n    widthStore: new WidthStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    open = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    close = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { ActivityComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    hubConnection: HubConnection | null = null;\r\n    activityComments: ActivityComment[] = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setHubConnection = (hubConnection: HubConnection) => {\r\n        this.hubConnection = hubConnection;\r\n    }\r\n\r\n    setActivityComments = (activityComments: ActivityComment[]) => {\r\n        activityComments.forEach(activityComment => {\r\n            activityComment.createdAt = new Date(activityComment.createdAt + 'Z');\r\n        })\r\n\r\n        this.activityComments = activityComments;\r\n    }\r\n\r\n    unshiftActivityComments = (activityComment: ActivityComment) => {\r\n        activityComment.createdAt = new Date(activityComment.createdAt);\r\n        this.activityComments.unshift(activityComment);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection to comments...', error))\r\n\r\n            this.hubConnection.on('LoadComments', (activityComments: ActivityComment[]) => {\r\n                this.setActivityComments(activityComments);\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (activityComment: ActivityComment) => {\r\n                this.unshiftActivityComments(activityComment);\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error trying to stop comment connection...', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.setActivityComments([]);\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Icon, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const handleChangeLanguage = () => {\r\n        if (i18n.language === 'en') {\r\n            i18n.changeLanguage('es');\r\n        } else {\r\n            i18n.changeLanguage('en');\r\n        }\r\n    }\r\n\r\n    const { userStore: { user, logout, isLoggedIn } } = useStore();\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={ NavLink } to='/' exact header>\r\n                    <Icon name='home' size='big' />\r\n                    { isMobile ? '' : t('home') }\r\n                </Menu.Item>\r\n                {\r\n                    isLoggedIn && (\r\n                        <>\r\n                            <Menu.Item name={ t('events') } as={ NavLink } to='/activities' />\r\n                            <Menu.Item>\r\n                                <Button\r\n                                    as={ Link } to='/createActivity'\r\n                                    positive content={ t('create') + (isMobile ? '' : ' ' + t('event')) }\r\n                                />\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={ handleChangeLanguage }>\r\n                                { isMobile ? '' : t('change_language') }\r\n                                <img src={ '/assets/' + (i18n.language === 'en' ? 'spain_flag.png' : 'usa_flag.png') } alt='locale' style={ {marginLeft: (isMobile ? '0px' : '10px')} } />\r\n                            </Menu.Item>\r\n                            <Menu.Item position='right'>\r\n                                <Image src={ user?.image || '/assets/user.png' } avatar spaced='right'/>\r\n                                <Dropdown pointing='top right' text={ user?.displayName }>\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item as={ Link } to={ `/profiles/${user?.username}` } text={ t('my_profile') } icon='user' />\r\n                                        <Dropdown.Item onClick={ logout } text={ t('logout') } icon='power' />\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                        </>\r\n                    )\r\n                }\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore, userStore } = useStore();\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(syntheticEvent: SyntheticEvent, username: string) {\r\n        syntheticEvent.preventDefault();\r\n        profile.following\r\n            ? profileStore.updateFollowing(username, false)\r\n            : profileStore.updateFollowing(username, true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={ {width: '100%'} }>\r\n                <Button\r\n                    fluid color='teal'\r\n                    content={ (profile.following ? '' : t('not')) + ' ' + t('following') }\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={ {width: '100%'} }>\r\n                <Button\r\n                    fluid\r\n                    color={ profile.following ? 'red' : 'green' }\r\n                    content={ profile.following ? t('unfollow') : t('follow') }\r\n                    loading={ profileStore.mainLoading }\r\n                    onClick={ (mouseEvent) => handleFollow(mouseEvent, profile.username) }\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    function truncateBio(bio: string | undefined) {\r\n        if (bio) {\r\n            return bio.length > 40\r\n                ? bio.substring(0, 37) + '...'\r\n                : bio;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Image src={ profile.image || '/assets/user.png'} as={ Link } to={ `/profiles/${profile.username}` } />\r\n            <Card.Content>\r\n                <Card.Header as={ Link } to={ `/profiles/${profile.username}` }>{ profile.displayName }</Card.Header>\r\n                <Card.Description>{ truncateBio(profile.bio) }</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                { profile.followersCount + ' ' + t('follower') + (profile.followersCount === 1 ? '' : t('(s)')) }\r\n            </Card.Content>\r\n            <FollowButton profile={ profile } />\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees } : Props) {\r\n    const followingStyle = {\r\n        borderColor: 'green',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {\r\n                attendees.map(attendee => (\r\n                    <Popup on='click' key={ attendee.username } trigger={\r\n                        <List.Item key={ attendee.username }>\r\n                            <Image\r\n                                size='mini' circular bordered\r\n                                src={ attendee.image || '/assets/user.png' }\r\n                                style={ attendee.following ? followingStyle : null }\r\n                            />\r\n                        </List.Item> }\r\n                    >\r\n                        <Popup.Content>\r\n                            <ProfileCard profile={ attendee } />\r\n                        </Popup.Content>\r\n                    </Popup>))\r\n            }\r\n        </List>\r\n    )\r\n})","import { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {\r\n                    activity.isCancelled && (\r\n                        <Label attached='top' color='red' content={ t('cancelled') } style={ {textAlign: 'center'} } />\r\n                    ) \r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={ {marginBottom: 3} }size='tiny' circular src={ activity.host?.image || '/assets/user.png' } />\r\n                        <Item.Content>\r\n                            <Item.Header as={ Link } to={ `/activities/${activity.id}` }>{ activity.title }</Item.Header>\r\n                            <Item.Description>\r\n                                { t('hosted_by') } <Link to={ `profiles/${activity.hostUsername}` }>{ activity.host?.displayName }</Link>\r\n                            </Item.Description>\r\n                            {\r\n                                activity.isHost\r\n                                    ? (\r\n                                        <Item.Description>\r\n                                            <Label basic color='orange'>\r\n                                                { t('you_are_host') }\r\n                                            </Label>\r\n                                        </Item.Description>)\r\n                                    : activity.isGoing && (\r\n                                        <Item.Description>\r\n                                            <Label basic color='green'>\r\n                                                { t('you_are_going') }\r\n                                            </Label>\r\n                                        </Item.Description>)\r\n                            }\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' />{ t(\"date_detail\", { date: activity.date! }) }\r\n                    <Icon name='marker' />{ activity.venue }\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={ activity.attendees! } />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{ activity.description }</span>\r\n                <Button\r\n                    as={ Link } to={ `/activities/${activity.id}` }\r\n                    floated='right' content={ t('view') } color='teal'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n\r\n    return (\r\n        <>\r\n            { \r\n                activityStore.groupedActivities.map(([group, activities]) => (\r\n                    <Fragment key={ group }>\r\n                        <Header sub color='teal'>\r\n                            { group }\r\n                        </Header>\r\n                        { activities.map(activity => (\r\n                            <ActivityListItem key={ activity.id } activity={ activity } />\r\n                        )) }\r\n                    </Fragment>))\r\n            }\r\n        </>\r\n    )\r\n})","import Calendar from \"react-calendar\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default function ActivityFilters() {\r\n    const { t } = useTranslation();\r\n\r\n    const { activityStore: { predicate, setPredicate } } = useStore();\r\n\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item \r\n                    content={ t('all_events') }\r\n                    active={ predicate.has('all') }\r\n                    onClick={ () => setPredicate('all', 'true') }\r\n                />\r\n                <Menu.Item\r\n                    content={ t(\"you_going\") }\r\n                    active={ predicate.has('isGoing') }\r\n                    onClick={ () => setPredicate('isGoing', 'true') }\r\n                />\r\n                <Menu.Item\r\n                    content={ t(\"you_hosting\") }\r\n                    active={ predicate.has('isHost') }\r\n                    onClick={ () => setPredicate('isHost', 'true') }\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar\r\n                onChange={ (date) => setPredicate('startDate', date as Date) }\r\n                value={ predicate.get('startDate') || new Date() }\r\n            />\r\n        </>\r\n    )\r\n}","import { Fragment } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={ {marginTop: 25} }>\r\n                <Segment.Group>\r\n                    <Segment style={ {minHeight: 110} }>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={ {minHeight: 70} } />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content={ t('view') } />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","\r\nimport { useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { pagination } = activityStore;\r\n\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        activityStore.setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        activityStore.list().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityStore.activities.size <= 1) activityStore.list();\r\n      activityStore.list();\r\n    }, [activityStore])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={ isMobile ? '16' : '10' }>\r\n                {\r\n                    activityStore.loadingInitial && !loadingNext\r\n                        ? (\r\n                            <>\r\n                                <ActivityListItemPlaceholder />\r\n                                <ActivityListItemPlaceholder />\r\n                            </>\r\n                        )\r\n                        : (\r\n                            <InfiniteScroll\r\n                                pageStart={ 1 }\r\n                                loadMore={ handleGetNext }\r\n                                hasMore={ !loadingNext && !!pagination && pagination.currentPage < pagination.totalPages }\r\n                                initialLoad={ false }\r\n                            >\r\n                                <ActivityList />\r\n                            </InfiniteScroll>\r\n                        )\r\n                }\r\n            </Grid.Column>\r\n            {\r\n                !isMobile && (\r\n\r\n                    <Grid.Column width='6'>\r\n                        <ActivityFilters />\r\n                    </Grid.Column>\r\n                )\r\n            }\r\n            <Grid.Column width='10'>\r\n                <Loader active={ loadingNext } />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import i18next from \"i18next\";\r\nimport I18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\r\nimport I18NextHttpBackend from \"i18next-http-backend\";\r\nimport { format as formatDate, formatDistanceToNow, isDate } from \"date-fns\";\r\nimport { en, es } from \"date-fns/locale\";\r\n\r\nconst locales = { en, es };\r\n\r\ni18next.use(I18NextHttpBackend).use(I18nextBrowserLanguageDetector).init({\r\n    fallbackLng: 'es',\r\n    debug: false,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        cache: ['cookie'],\r\n    },\r\n    interpolation: {\r\n        format: (value, format) => {\r\n            if (isDate(value)) {\r\n                const locale = locales[i18next.language];\r\n                switch (format) {\r\n                    case \"detail\":\r\n                        return formatDate(value, \"dd MMM yyyy h:mm aa\", { locale });\r\n                    case \"store\":\r\n                        return formatDate(value, \"dd MMM yyyy\", { locale });\r\n                    case \"distance\":\r\n                        return formatDistanceToNow(value, { locale });\r\n                    case \"daymonth\":\r\n                        return formatDate(value, 'do LLL', { locale });\r\n                    case \"hour\":\r\n                        return formatDate(value, 'h:mm a', { locale });\r\n                    default:\r\n                        return formatDate(value, format, { locale });\r\n                }\r\n            } else {\r\n                return value;\r\n            }\r\n        },\r\n        escapeValue: false\r\n    }\r\n});\r\n\r\nexport default i18next;","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function TextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <input { ...field} { ...props } />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore } = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ {email: '', password: '', error: null} }\r\n            onSubmit={ (values, { setErrors }) => userStore.login(values).catch(error => setErrors({ error: t('invalid_credentials') })) }\r\n        >\r\n            {\r\n                ({ handleSubmit, isSubmitting, errors }) => (\r\n                    <Form className='ui form' onSubmit={ handleSubmit } autoComplete='off'>\r\n                        <Header as='h2' content={ t('login') } color='teal' textAlign='center' />\r\n                        <TextInput name='email' placeholder={ t('email') } />\r\n                        <TextInput name='password' placeholder={ t('password') } type='password' />\r\n                        <ErrorMessage name='error' render={ () => <Label style={ {marginBottom: 10} } basic color='red' content={ errors.error }/> }/>\r\n                        <Button loading={ isSubmitting } positive content={ t('login') } type='submit' fluid />\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            {\r\n                errors && (\r\n                    <Message.List>\r\n                        { errors.map((error: any, key: any) => (\r\n                            <Message.Item key={ key }>{ error }</Message.Item>\r\n                        ))}\r\n                    </Message.List>\r\n                )\r\n            }\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore } = useStore();\r\n\r\n    return (\r\n        <Formik initialValues={ {displayName: '', username: '', email: '', password: '', error: null} } \r\n            onSubmit={ (values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error })) }\r\n            validationSchema={\r\n                Yup.object({\r\n                    displayName: Yup.string().required(t('display_name_required')),\r\n                    username: Yup.string().required(t('username_required')),\r\n                    email: Yup.string().required(t('email_required')).email(),\r\n                    password: Yup.string().required(t('password_required'))\r\n                }) \r\n            }\r\n        >\r\n            {\r\n                ({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                    <Form className='ui form error' onSubmit={ handleSubmit } autoComplete='off'>\r\n                        <Header as='h2' content={ t('sign_up') } color='teal' textAlign='center' />\r\n                        <TextInput name='displayName' placeholder={ t('display_name') } />\r\n                        <TextInput name='username' placeholder={ t('user_name') } />\r\n                        <TextInput name='email' placeholder={ t('email') } />\r\n                        <TextInput name='password' placeholder={ t('password') } type='password' />\r\n                        <ErrorMessage name='error' render={ () => <ValidationErrors errors={ errors.error } /> }/>\r\n                        <Button disabled={ !isValid || !dirty || isSubmitting }\r\n                            loading={ isSubmitting }\r\n                            positive content={ t('register') } type='submit' fluid\r\n                        />\r\n                    </Form>)\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Button, Icon, Divider, Grid } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport i18n from '../../i18n';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore, modalStore } = useStore();\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    function handleGithubRedirect() {\r\n        window.open('https://github.com/PRLL/Net_React_Sample', '_blank');\r\n    }\r\n\r\n    function handleDocumentationRedirect() {\r\n        if (i18n.language === 'en') {\r\n            window.open('https://drive.google.com/file/d/1h0w8lhFLoGINizT_aFg1W5BFGrH-Xr3x/view?usp=sharing', '_blank');\r\n        } else {\r\n            window.open('https://drive.google.com/file/d/1h0w8lhFLoGINizT_aFg1W5BFGrH-Xr3x/view?usp=sharing', '_blank');\r\n        }\r\n    }\r\n\r\n    const handleChangeLanguage = () => {\r\n        if (i18n.language === 'en') {\r\n            i18n.changeLanguage('es');\r\n        } else {\r\n            i18n.changeLanguage('en');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Segment inverted textAlign='center' vertical className='masthead' styles={ {float: 'center'} }>\r\n                <Grid>\r\n                    <Grid.Row verticalAlign='middle'>\r\n                        <Container text>\r\n                            <Header as='h1' inverted>\r\n                                <Icon name={ isMobile ? 'mobile alternate' : 'desktop' } size='massive' style={ {marginBottom: 12} } />\r\n                            </Header>\r\n                            {\r\n                                userStore.isLoggedIn\r\n                                    ? (\r\n                                        <>\r\n                                            <Header as='h2' inverted content={ t('welcome') } />\r\n                                            <Button as={ Link } to='/activities' size='huge' inverted>\r\n                                                { t('go_to') }\r\n                                            </Button>\r\n                                        </>)\r\n                                    : (\r\n                                        <>\r\n                                            <Button onClick={ () => modalStore.open(<LoginForm />) } size='huge' inverted>\r\n                                                { t('login') }\r\n                                            </Button>\r\n                                            <Button onClick={ () => modalStore.open(<RegisterForm />) } size='huge' inverted>\r\n                                                { t('register') }\r\n                                            </Button>\r\n                                            <Divider horizontal inverted>{ t('or') }</Divider>\r\n                                            <Button\r\n                                                size='huge' inverted color='facebook' content={ t('facebook_login') }\r\n                                                loading={ userStore.facebookLoading }\r\n                                                onClick={ userStore.facebookLogin }\r\n                                            />\r\n                                        </>)\r\n                            }\r\n                            <Divider horizontal inverted />\r\n                            <Icon onClick={ handleGithubRedirect } link name='github' size='huge' style={ {marginBottom: '60px'} } />\r\n                            <img onClick={ handleChangeLanguage } width='62' height='66' src={ '/assets/' + (i18n.language === 'en' ? 'spain_flag.png' : 'usa_flag.png') } alt='locale' />\r\n                            <Icon onClick={ handleDocumentationRedirect } link name='help circle' size='huge' style={ {marginBottom: '60px'} } />\r\n                        </Container>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n    value?: string | undefined;\r\n}\r\n\r\nexport default function TextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <textarea { ...field} { ...props } />\r\n            {\r\n                meta.touched && meta.error\r\n                    ? <Label basic color='red'>{ meta.error }</Label>\r\n                    : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function SelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <Select clearable \r\n                options={ props.options }\r\n                value={ field.value || null }\r\n                onChange={ (event, data) => helpers.setValue(data.value) }\r\n                onBlur={ () => helpers.setTouched(true) }\r\n                placeholder={ props.placeholder }\r\n            />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'}\r\n]","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\n                                        /* by using 'Partial<>' all of the properties in the props are optional.\r\n                                        This was used because giving error because not pasing 'onChange' property on 'ActivityForm',\r\n                                        but it is already established inside the 'DatePicker' here... */\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <DatePicker\r\n                { ...field }\r\n                { ...props }\r\n                selected={ (field.value && new Date(field.value)) || null }\r\n                onChange={ value => helpers.setValue(value) }\r\n            />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextArea from '../../../app/common/form/TextArea';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport { categoryOptions } from '../../../app/common/select_options/categoryOptions';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { useTranslation } from 'react-i18next';\r\n  \r\nexport default observer(function ActivityForm() {\r\n    const { t } = useTranslation();\r\n\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [formActivity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required(t('activity_title_required')),\r\n        description: Yup.string().required(t('activity_description_required')),\r\n        category: Yup.string().required(t('activity_category_required')),\r\n        date: Yup.string().required(t('activity_date_required')),\r\n        venue: Yup.string().required(t('activity_venue_required')),\r\n        city: Yup.string().required(t('activity_city_required'))\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) activityStore.detail(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n    }, [id, activityStore])\r\n\r\n    function handleFormSubmit(formActivity: ActivityFormValues) {\r\n        if (!formActivity.id) {\r\n            formActivity.id = uuid();\r\n\r\n            activityStore.create(formActivity).then(() => {\r\n                history.push(`/activities/${formActivity.id}`);\r\n            })\r\n        } else {\r\n            activityStore.update(formActivity).then(() => {\r\n                history.push(`/activities/${formActivity.id}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    if (activityStore.loadingInitial) return <LoadingComponent content={ t('loading_activity') } />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content={ t('activity_details') } sub color='teal' />\r\n            <Formik enableReinitialize\r\n                initialValues={ formActivity }\r\n                validationSchema={ validationSchema }\r\n                onSubmit={ values => handleFormSubmit(values) }\r\n            >\r\n                {\r\n                    ({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                        <Form className='ui form' onSubmit={ handleSubmit } autoComplete='off'>\r\n                            <TextInput placeholder={ t('title') } name='title' />\r\n                            <TextArea rows={ 3 } placeholder={ t('description') } name='description' />\r\n                            <SelectInput options={ categoryOptions } placeholder={ t('category') } name='category' />\r\n                            <DateInput placeholderText={ t('date') } name='date' showTimeSelect timeCaption='time' dateFormat='MMMM d, yyyy h:mm aa' />\r\n\r\n                            <Header content={ t('location_details') } sub color='teal' />\r\n                            <TextInput placeholder={ t('city') } name='city' />\r\n                            <TextInput placeholder={ t('venue') } name='venue' />\r\n\r\n                            <Button \r\n                                disabled={ isSubmitting || !dirty || !isValid }\r\n                                loading={ isSubmitting } \r\n                                floated='right' positive type='submit' content={ t('submit') }\r\n                            />\r\n                            <Button as={ Link } to='/activities' floated='right' type='button' content={ t('cancel') } />\r\n                        </Form>)\r\n                }\r\n            </Formik>\r\n\r\n        </Segment>\r\n    );\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId])\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={ {border: 'none'} }\r\n            >\r\n            <Header>{ t('comments') }</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik\r\n                    onSubmit={ (values, { resetForm }) => commentStore.addComment(values).then(() => resetForm()) }\r\n                    initialValues={ {body: ''} }\r\n                    validationSchema={ Yup.object({\r\n                        body: Yup.string().required()\r\n                    }) }\r\n                >\r\n                {\r\n                    ({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {\r\n                                    (props : FieldProps) => (\r\n                                    <div style={ {position: 'relative'} }>\r\n                                        <Loader active={ isSubmitting } />\r\n                                        <textarea \r\n                                            placeholder={ t('type_comment') }\r\n                                            rows={ 2 }\r\n                                            { ...props.field }\r\n                                            onKeyPress={ keyboardEvent => {\r\n                                                if (keyboardEvent.key === 'Enter')\r\n                                                {\r\n                                                    if (keyboardEvent.shiftKey) \r\n                                                    {\r\n                                                        return;\r\n                                                    }\r\n                                                    else\r\n                                                    {\r\n                                                        keyboardEvent.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>) \r\n                                }\r\n                            </Field>\r\n                        </Form>\r\n                    )\r\n                }\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {\r\n                        commentStore.activityComments.map(comment => (\r\n                            <Comment key={ comment.id }>\r\n                                <Comment.Avatar src={ comment.image || '/assets/user.png' } />\r\n                                <Comment.Content>\r\n                                    <Comment.Author as={ Link } to={ `/profiles/${comment.username}` }>{ comment.displayName }</Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        <div>{ t(\"date_distance\", { date: comment.createdAt }) }</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text style={ {whiteSpace: 'pre-wrap'} }>{ comment.body }</Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ))\r\n                    }\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { activityStore } = useStore();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={ {padding: '0'} }>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={ activityImageStyle }/>\r\n                {\r\n                    activity.isCancelled && (\r\n                        <Label style={ {position: 'absolute', zIndex: 1000, left: -14, top: 20} } ribbon color='red' content={ t('cancelled') } />\r\n                    )\r\n                }\r\n                <Segment style={ activityImageTextStyle } basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={ activity.title }\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                { activity.date && (\r\n                                    <p>{ t(\"date_store\", { date: activity.date! }) }</p>)\r\n                                }\r\n                                <p>\r\n                                    { t('hosted_by') } <strong><Link to={ `/profiles/${activity.host?.username}` }>{ activity.host?.displayName }</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                { activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            onClick={ activityStore.cancel }\r\n                            loading={ activityStore.loading }\r\n                            color={ activity.isCancelled ? 'green' : 'red' }\r\n                            floated='right' content={ activity.isCancelled ? t('reactivate_activity') : t('cancel_event') }\r\n                        />\r\n                        <Button\r\n                            disabled={ activity.isCancelled } \r\n                            as={ Link } to={ `/edit/${activity.id}` }\r\n                            color='orange' floated='right'\r\n                        >\r\n                            { t('manage_event') }\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing\r\n                    ? (\r\n                        <Button loading={ activityStore.loading } onClick={ activityStore.attend }>{ t('cancel_attendance') }</Button>\r\n                    ) : (\r\n                        <Button disabled={ activity.isCancelled } loading={ activityStore.loading } onClick={ activityStore.attend } color='teal'>{ t('join_activity') }</Button>\r\n                    ) }\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    const { t } = useTranslation();\r\n  \r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width='1'>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                        <p>{ activity.description }</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width='1'>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                    {\r\n                        activity.date && (\r\n                            <span>\r\n                                { t(\"date_detail\", { date: activity.date! }) }\r\n                            </span>)\r\n                    }\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width='1'>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                        <span>{ activity.venue }, { activity.city }</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    if (!attendees) return null;\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                { attendees.length } { attendees.length === 1 ? t('person') : t('people') } { t('going') }\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {\r\n                        attendees.map(attendee => (\r\n                            <Item style={ {position: 'relative'} } key={ attendee.username }>\r\n                                {\r\n                                    attendee.username === host?.username && (\r\n                                        <Label\r\n                                        style={ {position: 'absolute'} }\r\n                                        color='orange'\r\n                                        ribbon='right'\r\n                                        >\r\n                                        { t('host') }\r\n                                        </Label>) \r\n                                }\r\n                                <Image size='tiny' src={ attendee.image || '/assets/user.png' } />\r\n                                <Item.Content verticalAlign='middle'>\r\n                                    <Item.Header as='h3'>\r\n                                        <Link to={ `/profiles/${attendee.username}` }>{ attendee.displayName }</Link>\r\n                                    </Item.Header>\r\n                                    {\r\n                                        attendee.following && (\r\n                                            <Item.Extra style={ {color: 'orange'} }>{ t('following') }</Item.Extra>)\r\n                                    }\r\n                                </Item.Content>\r\n                            </Item>))\r\n                    }\r\n                </List>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { t } = useTranslation();\r\n\r\n  const { activityStore } = useStore();\r\n  const { selectedActivity: activity } = activityStore;\r\n  const { id } = useParams<{id: string}>();\r\n\r\n  const [width, setWidth] = useState<number>(window.innerWidth);\r\n  function handleWindowSizeChange() {\r\n      setWidth(window.innerWidth);\r\n  }\r\n  useEffect(() => {\r\n      window.addEventListener('resize', handleWindowSizeChange);\r\n      return () => {\r\n          window.removeEventListener('resize', handleWindowSizeChange);\r\n      }\r\n  }, []);\r\n  \r\n  let isMobile: boolean = (width <= 768);\r\n\r\n  useEffect(() => {\r\n    if (id) activityStore.detail(id);\r\n    return () => activityStore.setSelectedActivity(undefined);\r\n  }, [id, activityStore]);\r\n\r\n  if (activityStore.loadingInitial || !activity) return <LoadingComponent content={ t('fetching_activity') } />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={ isMobile ? '16' : '10' }>\r\n        <ActivityDetailedHeader activity={ activity }/>\r\n        <ActivityDetailedInfo  activity={ activity }/>\r\n        <ActivityDetailedChat activityId={ activity.id } />\r\n      </Grid.Column>\r\n      {\r\n        !isMobile && (\r\n          <Grid.Column width='6'>\r\n            <ActivityDetailedSidebar activity={ activity }/>\r\n          </Grid.Column>\r\n        )\r\n      }\r\n    </Grid>\r\n  );\r\n})","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    const { t } = useTranslation();\r\n  \r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                { t('oops_404') }\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={ Link } to='/activities' primary >\r\n                    { t('return_to_activities') }\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n    const { commonStore } = useStore();\r\n    \r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={ commonStore.error?.message } />\r\n            {\r\n                commonStore.error && (\r\n                    <Segment>\r\n                        <Header as='h4' content='Stack trace' color='teal' />\r\n                        <code style={{ marginTop: '10px' }}>{ commonStore.error }</code>\r\n                    </Segment>)\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\"\r\n\r\nexport default observer(function ModalContainer() {\r\n    const { modalStore } = useStore();\r\n\r\n    return (\r\n        <Modal open={ modalStore.modal.open } onClose={ modalStore.close } size='mini'>\r\n            <Modal.Content>\r\n                { modalStore.modal.body }\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport TextArea from \"../../app/common/form/TextArea\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { profile } = profileStore;\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ {displayName: profile?.displayName, bio: profile?.bio} }\r\n            onSubmit={ values => {\r\n                profileStore.update(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            } }\r\n            validationSchema={ Yup.object({\r\n                displayName: Yup.string().required(t('display_name_required'))\r\n            }) }\r\n        >\r\n            {\r\n                ({ isSubmitting, isValid, dirty }) => (\r\n                    <Form className='ui form'>\r\n                        <TextInput placeholder={ t('display_name') } name='displayName' />\r\n                        <TextArea rows={3} placeholder={ t('add_bio') } name='bio' />\r\n                        <Button\r\n                            positive\r\n                            type='submit'\r\n                            loading={ isSubmitting }\r\n                            content={ t('update_profile') }\r\n                            floated='right'\r\n                            disabled={ !isValid || !dirty }\r\n                        />\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { useState } from 'react';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { isProfileFromCurrentUser, profile } = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={ t('about') + ` ${profile?.displayName}` } />\r\n                    {\r\n                        isProfileFromCurrentUser && (\r\n                            <Button\r\n                                floated='right'\r\n                                basic\r\n                                content={ editMode ? t('cancel') : t('edit_profile') }\r\n                                onClick={ () => setEditMode(!editMode) }\r\n                            />\r\n                        )\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {\r\n                        editMode\r\n                            ? <ProfileEditForm setEditMode={ setEditMode } />\r\n                            : <span style={ {whiteSpace: 'pre-wrap'} }>{ profile?.bio }</span>\r\n                    }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProfileActivity } from '../../app/models/profile';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadProfileActivities,\r\n        profile,\r\n        loadingActivities,\r\n        profileActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfileActivities(profile!.username);\r\n    }, [loadProfileActivities, profile]);\r\n\r\n    const handleTabChange = (syntheticEvent: SyntheticEvent, tabProps: TabProps) => {\r\n        loadProfileActivities(profile!.username, panes[tabProps.activeIndex as number].pane.key);\r\n    };\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    const panes = [\r\n        { menuItem: t('future_events'), pane: { key: 'future' } },\r\n        { menuItem: t('hosting'), pane: { key: 'hosting' } },\r\n        { menuItem: t('past_events'), pane: { key: 'past' } }\r\n    ];\r\n\r\n    return (\r\n        <Tab.Pane loading={ loadingActivities }>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='calendar' content={ t('events') } />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Tab\r\n                        panes={ panes }\r\n                        menu={ {secondary: true, pointing: true} }\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={ isMobile ? '2' : '4' }>\r\n                    {\r\n                        profileActivities.map((activity: ProfileActivity) => (\r\n                            <Card\r\n                                as={ Link }\r\n                                to={ `/activities/${activity.id}` }\r\n                                key={ activity.id }\r\n                            >\r\n                                <Image\r\n                                    src={ `/assets/categoryImages/${activity.category}.jpg` }\r\n                                    style={ {minHeight: 100, objectFit: 'cover'} }\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{ activity.title }</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{ t(\"date_daymonth\", { date: new Date(activity.date) }) }</div>\r\n                                        <div>{ t(\"date_hour\", { date: new Date(activity.date) }) }</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { profile } = profileStore;\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    \r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Tab.Pane loading={ profileStore.followingsLoading }>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header\r\n                        floated='left' icon='user'\r\n                        content=\r\n                        {\r\n                            t('people') + ' ' + (profileStore.activeTab === 3 \r\n                                ? t('following_to') + ` ${profile?.displayName}`\r\n                                : `${profile?.displayName} ` + t('is_following'))\r\n                        }\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Card.Group itemsPerRow={ isMobile ? '2' : '4' }>\r\n                        {\r\n                            profileStore.followings.map(profile => (\r\n                                <ProfileCard key={ profile.username } profile={ profile } />))\r\n                        }\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles } : Props) {\r\n  const dropzoneDefaultStyle = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  }\r\n\r\n  const dropzoneActiveStyle = {\r\n    borderColor: 'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <div { ...getRootProps() } style={ isDragActive ? { ...dropzoneDefaultStyle, ...dropzoneActiveStyle } : dropzoneDefaultStyle }>\r\n      <input { ...getInputProps() } />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n      {/* {\r\n        isDragActive\r\n          ? <p>Drop the files here ...</p>\r\n          : <p>Drag 'n' drop some files here, or click to select files</p>\r\n      } */}\r\n    </div>\r\n  )\r\n}","import { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    setCropper: (cropper: Cropper) => void;\r\n    imagePreview: string;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ setCropper, imagePreview } : Props) {\r\n    return (\r\n        <Cropper\r\n            src={ imagePreview }\r\n            style={ {height: 200, width: '100%'} }\r\n            initialAspectRatio={ 1 }\r\n            aspectRatio={ 1 }\r\n            preview='.img-preview'\r\n            guides={ false }\r\n            viewMode={ 1 }\r\n            autoCropArea={ 1 }\r\n            background={ false }\r\n            onInitialized={ (cropper: Cropper) => setCropper(cropper) }\r\n        />\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n    uploadPhoto: (file: Blob) => void;\r\n    loading: boolean;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ uploadPhoto, loading } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n    // const [upload, setUpload] = useState<boolean>(false);\r\n    // const [croppedImage, setCroppedImage] = useState<File>();\r\n\r\n    // function onCrop() {\r\n    //     if (cropper) {\r\n    //         cropper.getCroppedCanvas().toBlob(blob => setCroppedImage(new File([blob!], 'cropped_image.png', { type:\"image/png\", lastModified:new Date().getTime() })));\r\n    //     }\r\n\r\n    //     setUpload(true);\r\n    // }\r\n\r\n    function onUpload() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n    \r\n    function close() {\r\n        setFiles([]);\r\n    }\r\n\r\n    // function backToCrop() {\r\n    //     setUpload(false);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => {\r\n                URL.revokeObjectURL(file.preview);\r\n            });\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        isMobile\r\n            ? (\r\n                <>\r\n                {\r\n                    files && files.length > 0\r\n                        ? (\r\n                            // upload\r\n                                // ? (\r\n                                //     <>\r\n                                //         {\r\n                                //             croppedImage !== undefined && (\r\n                                //                 <>\r\n                                //                     <Header sub color='teal' content={ t('step_3') } />\r\n                                //                     { console.log(\"croppedImage\") }\r\n                                //                     { console.log(croppedImage) }\r\n                                //                     <Image src={ croppedImage } alt='' />\r\n                                //                     <Button.Group widths={ 2 }>\r\n                                //                         <Button loading={ loading } onClick={ onUpload } positive icon='check' />\r\n                                //                         <Button disabled={ loading } onClick={ backToCrop } icon='arrow left' />\r\n                                //                     </Button.Group>\r\n                                //                 </>\r\n                                //             )\r\n                                //         }\r\n                                //     </>\r\n\r\n                                // )\r\n                                // : (\r\n                                    <>\r\n                                        <Header color='teal' content={ t('step_2') } />\r\n                                        <PhotoWidgetCropper setCropper={ setCropper } imagePreview={ files[0].preview } />\r\n                                        <Button.Group widths={ 2 }>\r\n                                            <Button loading={ loading } onClick={ onUpload } positive icon='check' />\r\n                                            <Button disabled={ loading } onClick={ close } icon='arrow left' />\r\n                                        </Button.Group>\r\n                                    </>\r\n                                // )\r\n                        )\r\n                        : (\r\n                            <>\r\n                                <Header color='teal' content={ t('step_1') } />\r\n                                <PhotoWidgetDropzone setFiles={ setFiles }/>\r\n                            </>\r\n                        )\r\n                }\r\n                </>\r\n            )\r\n            : (\r\n                <Grid>\r\n                    <Grid.Column width='4'>\r\n                        <Header color='teal' content={ t('step_1') } />\r\n                        <PhotoWidgetDropzone setFiles={ setFiles }/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='1' />\r\n                    <Grid.Column width='4'>\r\n                        <Header color='teal' content={ t('step_2') } />\r\n                        {\r\n                            files && files.length > 0 && (\r\n                                <PhotoWidgetCropper setCropper={ setCropper } imagePreview={ files[0].preview } />\r\n                            )\r\n                        }\r\n                    </Grid.Column>\r\n                    <Grid.Column width='1' />\r\n                    <Grid.Column width='4'>\r\n                        <Header sub color='teal' content={ t('step_3') } />\r\n                        {\r\n                            files && files.length > 0 && (\r\n                                <>\r\n                                    <div className='img-preview' style={ {minHeight: 200, overflow: 'hidden'} } />\r\n                                    <Button.Group widths={ 2 }>\r\n                                        <Button loading={ loading } onClick={ onUpload } positive icon='check' />\r\n                                        <Button disabled={ loading } onClick={ close } icon='close' />\r\n                                    </Button.Group>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Grid.Column>\r\n                </Grid>\r\n            )\r\n        \r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Card, Container, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/image_upload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile} : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const [target, setTarget] = useState('');\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        profileStore.uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, syntheticEvent: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(syntheticEvent.currentTarget.name);\r\n        profileStore.setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, syntheticEvent: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(syntheticEvent.currentTarget.name);\r\n        profileStore.deletePhoto(photo);\r\n    }\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='image' content={ t('photos') } />\r\n                    {\r\n                        profileStore.isProfileFromCurrentUser && (\r\n                            <Button\r\n                                floated='right' basic\r\n                                content={ addPhotoMode ? t('cancel') : t('add_photo') }\r\n                                onClick={ () => setAddPhotoMode(!addPhotoMode) }\r\n                            />)\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                {\r\n                    addPhotoMode \r\n                        ? (\r\n                            <PhotoUploadWidget uploadPhoto={ handlePhotoUpload } loading={ profileStore.uploading }/>)\r\n                        : (\r\n                            <Card.Group itemsPerRow={ isMobile ? '2' : '3' }>\r\n                                { profile.photos?.map(photo => (\r\n                                    <Card key={ photo.id }>\r\n                                        <Image src={ photo.url } />\r\n                                        {\r\n                                            !photo.isMain \r\n                                                ? profileStore.isProfileFromCurrentUser && (\r\n                                                    <Button.Group fluid widths={ 2 }>\r\n                                                        <Button\r\n                                                            basic\r\n                                                            color='green'\r\n                                                            content={ t('main') }\r\n                                                            name={ 'setMainPhotoButton' + photo.id }\r\n                                                            disabled={ photo.isMain }\r\n                                                            loading={ target === 'setMainPhotoButton' + photo.id && profileStore.mainLoading }\r\n                                                            onClick={ mouseEvent => handleSetMainPhoto(photo, mouseEvent) }\r\n                                                        />\r\n                                                        <Button\r\n                                                            basic\r\n                                                            color='red'\r\n                                                            icon='trash'\r\n                                                            name={ 'deletePhotoButton' + photo.id }\r\n                                                            disabled={ photo.isMain }\r\n                                                            loading={ target === 'deletePhotoButton' + photo.id && profileStore.mainLoading }\r\n                                                            onClick={ mouseEvent => handleDeletePhoto(photo, mouseEvent) }\r\n                                                        />\r\n                                                    </Button.Group>)\r\n                                                : (\r\n                                                    <Container style={ {marginTop: '7px'} } textAlign='center'>\r\n                                                        <p>{ t('current_photo') }</p>\r\n                                                    </Container>\r\n                                                )\r\n                                        }\r\n                                    </Card>\r\n                                )) }\r\n                            </Card.Group>)\r\n                }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Tab } from \"semantic-ui-react\"\r\nimport { Profile } from \"../../app/models/profile\"\r\nimport { useStore } from \"../../app/stores/store\"\r\nimport ProfileAbout from \"./ProfileAbout\"\r\nimport ProfileActivities from \"./ProfileActivities\"\r\nimport ProfileFollowings from \"./ProfileFollowings\"\r\nimport ProfilePhotos from \"./ProfilePhotos\"\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileBody({profile} : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n\r\n    const panes = [\r\n        { menuItem: t('about'), render: () => <ProfileAbout /> },\r\n        { menuItem: t('photos'), render: () => <ProfilePhotos profile={ profile } /> },\r\n        { menuItem: t('events'), render: () => <ProfileActivities /> },\r\n        { menuItem: t('followers'), render: () => <ProfileFollowings /> },\r\n        { menuItem: t('following'), render: () => <ProfileFollowings /> }\r\n    ]\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    \r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isMobile\r\n                    ? (\r\n                        <Tab\r\n                            menu={ {fluid: true } }\r\n                            panes={ panes }\r\n                            onTabChange={ (mouseEvent, tabProps) => profileStore.setActiveTab(tabProps.activeIndex) }\r\n                        />)\r\n                    : (\r\n                        <Tab\r\n                        menu={ {fluid: true, vertical: true} }\r\n                        menuPosition='right'\r\n                        panes={ panes }\r\n                        onTabChange={ (mouseEvent, tabProps) => profileStore.setActiveTab(tabProps.activeIndex) }\r\n                    />)\r\n            }\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width='10'>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={ profile?.image || '/assets/user.png' } />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={ profile?.displayName } />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width='1' />\r\n                <Grid.Column width='4'>\r\n                    <Statistic.Group widths='2'>\r\n                        <Statistic\r\n                            label={ profile.followersCount === 1 ? t('follower') : t('followers') } \r\n                            value={ profile.followersCount }\r\n                        />\r\n                        <Statistic label={ t('following') } value={ profile.followingCount } />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={ profile } />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileBody from \"./ProfileBody\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { t } = useTranslation();\r\n\r\n    const { username } = useParams<{ username: string }>();\r\n    const { profileStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        profileStore.load(username);\r\n        return () => {\r\n            profileStore.setActiveTab(0);\r\n        }\r\n    }, [profileStore, username])\r\n\r\n    if (profileStore.loading) return <LoadingComponent content={ t('loading_profile') } />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='16'>\r\n                {\r\n                    profileStore.profile && (\r\n                        <>\r\n                            <ProfileHeader profile={ profileStore.profile } />\r\n                            <ProfileBody profile={ profileStore.profile } />\r\n                        </>)\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...routeProps }: Props) {\r\n    const { userStore: { isLoggedIn } } = useStore();\r\n\r\n    return (\r\n        <Route\r\n            { ...routeProps }\r\n            render={ (routeComponentProps) => isLoggedIn ? <Component { ...routeComponentProps } /> : <Redirect to='/' /> }\r\n        />\r\n    )\r\n}","import { useLocation } from \"react-router\";\r\n\r\nexport default function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import { useTranslation } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n    const { t } = useTranslation();\r\n\r\n    const email = useQuery().get('email') as string;\r\n\r\n    function handleVerificationEmailResend() {\r\n        agent.Account.resendVerificationEmail(email).then(() => {\r\n            toast.success(t('verification_email_resent'));\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon color='green'>\r\n                <Icon name='check' />\r\n                { t('successfully_registered') }\r\n            </Header>\r\n            <p>{ t('check_email') }</p>\r\n            {\r\n                email && (\r\n                    <>\r\n                        <p>{ t('click_to_resend') }</p>\r\n                        <Button \r\n                            primary content={ t('resend_email') } size='huge'\r\n                            onClick={ handleVerificationEmailResend }\r\n                        />\r\n                    </>\r\n                )\r\n            }\r\n        </Segment>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function ConfirmEmail() {\r\n    const { t } = useTranslation();\r\n\r\n    const { modalStore } = useStore();\r\n    const email = useQuery().get('email') as string;\r\n    const emailVerificationToken = useQuery().get('emailVerificationToken') as string;\r\n\r\n    const Status = {\r\n        Verifying: t('verifying'),\r\n        Failed: t('failed'),\r\n        Success: t('success')\r\n    }\r\n\r\n    const [status, setStatus] = useState(Status.Verifying);\r\n\r\n    function handleVerificationEmailResend() {\r\n        agent.Account.resendVerificationEmail(email).then(() => {\r\n            toast.success(t('verification_email_resent'));\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Account.verifyEmail(emailVerificationToken, email).then(() => {\r\n            setStatus(Status.Success);\r\n        }).catch(() => {\r\n            setStatus(Status.Failed);\r\n        })\r\n    }, [Status.Failed, Status.Success, emailVerificationToken, email])\r\n\r\n    function getBody() {\r\n        switch (status) {\r\n            case Status.Verifying:\r\n                return (\r\n                    <p>{ t('verifying') + '...' }</p>\r\n                )\r\n            case Status.Failed:\r\n                return (\r\n                    <div>\r\n                        <p>{ t('verification_failed') }</p>\r\n                        <Button\r\n                            primary size='huge' content={ t('resend_email') }\r\n                            onClick={ handleVerificationEmailResend }\r\n                        />\r\n                    </div>\r\n                )\r\n            case Status.Success:\r\n                return (\r\n                    <div>\r\n                        <p>{ t('email_verified') }</p>\r\n                        <Button\r\n                            primary size='huge' content={ t('login') }\r\n                            onClick={ () => modalStore.open(<LoginForm />) }\r\n                        />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Segment placeholder textAlign='center'>\r\n            <Header icon>\r\n                <Icon name='envelope' />\r\n                { t('email_verification') }\r\n            </Header>\r\n            <Segment.Inline>\r\n                { getBody() }\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { Container } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport { useStore } from '../stores/store';\r\nimport { useEffect } from 'react';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { useTranslation } from 'react-i18next';\r\nimport RegisterSuccess from '../../features/users/RegisterSuccess';\r\nimport ConfirmEmail from '../../features/users/ConfirmEmail';\r\n\r\nfunction App() {\r\n  const { t } = useTranslation();\r\n\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore])\r\n\r\n  if (!commonStore.appLoaded) return <LoadingComponent content={ t('loading_sample_app') } />\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path='/' component={ HomePage } />\r\n      <Route\r\n        path={ '/(.+)' }\r\n        render={ () => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path='/activities' component={ ActivityDashboard } />\r\n                <PrivateRoute path='/activities/:id' component={ ActivityDetails } />\r\n                <PrivateRoute key={ location.key } path={ ['/createActivity', '/edit/:id'] } component={ ActivityForm } />\r\n                <PrivateRoute path='/profiles/:username' component={ ProfilePage } />\r\n                <Route path='/server-error' component={ ServerError } />\r\n                <Route path='/account/registerSuccess' component={ RegisterSuccess } />\r\n                <Route path='/account/verifyEmail' component={ ConfirmEmail } />\r\n                <Route component={ NotFound } />\r\n              </Switch>\r\n            </Container>\r\n          </>) }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname])\r\n\r\n    return null;\r\n}","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/index.css';\nimport App from './app/layout/App';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nimport { Suspense } from 'react';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={ store }>\n    <Router history={ history }>\n      <ScrollToTop />\n      <I18nextProvider i18n={i18n}>\n        <Suspense fallback={ <div>Loading...</div> }>\n          <App />\n        </Suspense>\n      </I18nextProvider>\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}