{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/widthStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/TextArea.tsx","app/common/form/SelectInput.tsx","app/common/select_options/categoryOptions.ts","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/image_upload/PhotoWidgetDropzone.tsx","app/common/image_upload/PhotoWidgetCropper.tsx","app/common/image_upload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileBody.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","i18n.js","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","axiosRequestConfig","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","config","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","register","user","login","current","facebookLogin","accessToken","Profiles","username","listFollowings","predicate","listActivities","uploadPhoto","file","formData","FormData","append","setMainPhoto","profile","updateFollowing","deletePhoto","Profile","displayName","image","ActivityStore","activities","Map","selectedActivity","loading","loadingInitial","pagingParams","set","setActivity","userStore","isGoing","attendees","some","attendee","isHost","hostUsername","host","find","Date","deleteActivity","setSelectedActivity","setSelectedActivityAttendees","setSelectedActivityIsGoing","setSelectedActivityIsCancelled","isCancelled","setLoading","state","setLoadingInitial","setPagination","setPagingParams","setPredicate","value","forEach","detail","console","log","axiosParams","result","newActivity","runInAction","updatedActivity","filter","updateAttendeeFollowing","following","followersCount","cancel","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","activityA","activityB","getTime","entries","activitiesByDate","reduce","format","URLSearchParams","toString","toISOString","ProfileStore","mainLoading","followingsLoading","uploading","followings","activeTab","profileActivities","loadingActivities","setProfile","setProfileFollowersCount","count","setProfileFollowingCount","followingCount","filterProfilePhoto","photoId","photos","p","setProfileFollowing","pushProfilePhoto","photo","setProfileMainPhoto","isMain","iPhoto","setMainLoading","setFollowingsLoading","setUploading","setFollowings","profiles","setActiveTab","setProfileActivities","setLoadingActivities","handleFollowingChange","load","loadFollowings","loadProfileActivities","setUserImage","setDisplayName","activityStore","UserStore","facebookAccessToken","facebookLoading","setUser","name","setFacebookLoading","getUser","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","creds","setToken","modalStore","close","apiLogin","catch","scope","logout","localStorage","removeItem","WidthStore","isMobile","setIsMobile","innerWidth","getItem","appLoaded","setAppLoaded","setItem","modal","open","content","profileStore","commentStore","hubConnection","activityComments","setHubConnection","setActivityComments","activityComment","createdAt","unshiftActivityComments","unshift","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","stopHubConnection","stop","clearComments","addComment","invoke","widthStore","StoreContext","createContext","useStore","useContext","observer","useTranslation","t","i18n","useState","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","size","Button","Link","positive","onClick","language","changeLanguage","src","alt","style","marginLeft","position","Image","avatar","spaced","Dropdown","pointing","text","icon","Reveal","animated","Content","visible","fluid","color","hidden","mouseEvent","syntheticEvent","preventDefault","Card","Header","Description","bio","length","substring","truncateBio","extra","followingStyle","borderColor","borderWidth","List","horizontal","map","Popup","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityFilters","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","TextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","validationSchema","Yup","required","isValid","dirty","styles","float","isLoggedIn","Divider","LoadingComponent","Dimmer","TextArea","SelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","DateInput","selected","useHistory","useParams","formActivity","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","keyboardEvent","shiftKey","Comment","comment","Avatar","Author","Metadata","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","NotFound","Inline","primary","message","Modal","onClose","setEditMode","isProfileFromCurrentUser","editMode","Tab","Pane","panes","menuItem","pane","menu","onTabChange","e","tabProps","activeIndex","itemsPerRow","objectFit","Meta","PhotoWidgetDropzone","setFiles","dropzoneDefaultStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","target","setTarget","addPhotoMode","setAddPhotoMode","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","routeProps","routeComponentProps","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","ScrollToTop","pathname","scrollTo","locales","en","es","i18next","I18NextHttpBackend","I18nextBrowserLanguageDetector","fallbackLng","debug","detection","order","cache","interpolation","isDate","locale","formatDate","formatDistanceToNow","escapeValue","createBrowserHistory","ReactDOM","Provider","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.944d33dc.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, ProfileActivity } from '../models/profile';\r\nimport { User, UserLogin } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(axiosRequestConfig => {\r\n    const token = store.commonStore.token;\r\n    if (token) axiosRequestConfig.headers.Authorization = `Bearer ${token}`;\r\n    return axiosRequestConfig;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    } else {\r\n        return response;\r\n    }\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            } else if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('not-found');\r\n            }\r\n            else if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    modalStateErrors.push(data.errors[key])\r\n                }\r\n\r\n                throw modalStateErrors.flat();\r\n            }\r\n\r\n            break;\r\n        case 401:\r\n            toast.error('Unauthorized');\r\n            break;\r\n        case 404:\r\n            history.push('not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('activities', { params }).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete<void>(`activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    register: (user: UserLogin) => requests.post<User>('account/register', user),\r\n    login: (user: UserLogin) => requests.post<User>('account/login', user),\r\n    current: () => requests.get<User>('account'),\r\n    facebookLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\r\n}\r\n\r\nconst Profiles = {\r\n    details: (username: string) => requests.get<Profile>(`profiles/${username}`),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<ProfileActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`photos/${id}`, {}),\r\n    update: (profile: Partial<Profile>) => requests.put(`/profiles`, profile), // because only updating 2 properties of 'Profile' use Partial<>\r\n    updateFollowing: (username: string) => requests.post(`follow/${username}`, {}),\r\n    deletePhoto: (id: string) => requests.delete(`photos/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    })\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface ProfileActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activities = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activities.clear();\r\n                this.list();\r\n            }\r\n        )\r\n    }\r\n\r\n    setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                attendee => attendee.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(attendee => attendee.username === activity.hostUsername)\r\n        }\r\n\r\n        activity.date = new Date(activity.date!)\r\n        this.activities.set(activity.id, activity);\r\n    }\r\n\r\n    deleteActivity = (id: string) => {\r\n        this.activities.delete(id);\r\n    }\r\n\r\n    setSelectedActivity = (activity: Activity | undefined) => {\r\n        this.selectedActivity = activity;\r\n    }\r\n\r\n    setSelectedActivityAttendees = (attendees: Profile[]) => {\r\n        this.selectedActivity!.attendees = attendees;\r\n    }\r\n\r\n    setSelectedActivityIsGoing = (isGoing: boolean) => {\r\n        this.selectedActivity!.isGoing = isGoing;\r\n    }\r\n\r\n    setSelectedActivityIsCancelled = (isCancelled: boolean) => {\r\n        this.selectedActivity!.isCancelled = isCancelled;\r\n    }\r\n\r\n    setLoading = (state: boolean) => {\r\n        this.loading = state;\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n\r\n        switch (predicate) {\r\n            case 'startDate':\r\n                this.predicate.delete(predicate);\r\n                this.predicate.set(predicate, value);\r\n                break;\r\n            default:\r\n                resetPredicate();\r\n                this.predicate.set(predicate, true);\r\n        }\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activities.values())\r\n            .sort((activityA, activityB) => activityA.date!.getTime() - activityB.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');//.toISOString().split('T')[0];\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n\r\n        return params;\r\n    }\r\n\r\n    detail = async (id: string) => {\r\n        let activity = this.activities.get(id);\r\n\r\n        if (activity) {\r\n            this.setSelectedActivity(activity);\r\n            return activity;\r\n        } else {\r\n            this.setLoadingInitial(true);\r\n\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n\r\n                this.setActivity(activity);\r\n                this.setSelectedActivity(activity);\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        this.setLoadingInitial(false);\r\n    }\r\n\r\n    list = async () => {\r\n        this.setLoadingInitial(true);\r\n\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            })\r\n\r\n            this.setPagination(result.pagination);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoadingInitial(false);\r\n    }\r\n\r\n    create = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            this.setSelectedActivity(newActivity);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    update = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.detail(activity.id), ...activity }\r\n                    this.activities.set(activity.id, updatedActivity as unknown as Activity);\r\n                    this.setSelectedActivity(updatedActivity as unknown as Activity);\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    attend = async () => {\r\n        this.setLoading(true);\r\n        \r\n        const user = store.userStore.user;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            if (this.selectedActivity?.isGoing) {\r\n                this.setSelectedActivityAttendees(this.selectedActivity!.attendees?.filter(a => a.username !== user?.username)!);\r\n                this.setSelectedActivityIsGoing(false);\r\n            } else {\r\n                const attendee = new Profile(user!);\r\n                const attendees = this.selectedActivity?.attendees!;\r\n                attendees.push(attendee);\r\n                this.setSelectedActivityAttendees(attendees);\r\n                this.setSelectedActivityIsGoing(false);\r\n            }\r\n\r\n            this.setActivity(this.selectedActivity!);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activities.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    cancel = async () => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n            this.setSelectedActivityIsCancelled(!this.selectedActivity?.isCancelled);\r\n            this.setActivity(this.selectedActivity!);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    delete = async (id: string) => {\r\n        this.loading = true;\r\n\r\n        try {\r\n            await agent.Activities.delete(id);\r\n\r\n            this.deleteActivity(id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, ProfileActivity } from \"../models/profile\"\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loading = false;\r\n    mainLoading = false;\r\n    followingsLoading = false;\r\n    uploading = false;\r\n    followings: Profile[] = [];\r\n    activeTab = 0;;\r\n    profileActivities: ProfileActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                switch (activeTab) {\r\n                    case 3:\r\n                        this.loadFollowings('followers');\r\n                        break;\r\n                    case 4:\r\n                        this.loadFollowings('following');\r\n                        break;\r\n                    default:\r\n                        this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setProfile = (profile: Profile) => {\r\n        this.profile = profile;\r\n    }\r\n\r\n    setProfileFollowersCount = (count: number) => {\r\n        this.profile!.followersCount = count;\r\n    }\r\n\r\n    setProfileFollowingCount = (count: number) => {\r\n        this.profile!.followingCount = count;\r\n    }\r\n\r\n    filterProfilePhoto = (photoId: string) => {\r\n        if (this.profile) {\r\n            this.profile.photos = this.profile.photos?.filter(p => p.id !== photoId);\r\n        }\r\n    }\r\n\r\n    setProfileFollowing = (state: boolean) => {\r\n        this.profile!.following = state;\r\n    } \r\n\r\n    pushProfilePhoto = (photo: Photo) => {\r\n        this.profile?.photos?.push(photo);\r\n    }\r\n\r\n    setProfileMainPhoto = (photo: Photo) => {\r\n        if (this.profile && this.profile.photos) {\r\n            this.profile.photos.find(photo => photo.isMain)!.isMain = false;\r\n            this.profile.photos.find(iPhoto => iPhoto.id === photo.id)!.isMain = true;\r\n            this.profile.image = photo.url;\r\n        }\r\n    }\r\n\r\n    setLoading = (state: boolean) => {\r\n        this.loading = state;\r\n    }\r\n\r\n    setMainLoading = (state: boolean) => {\r\n        this.mainLoading = state;\r\n    }\r\n\r\n    setFollowingsLoading = (state: boolean) => {\r\n        this.followingsLoading = state;\r\n    }\r\n\r\n    setUploading = (state: boolean) => {\r\n        this.uploading = state;\r\n    }\r\n\r\n    setFollowings = (profiles: Profile[]) => {\r\n        this.followings = profiles;\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    setProfileActivities = (profileActivities: ProfileActivity[]) => {\r\n        this.profileActivities = profileActivities;\r\n    }\r\n\r\n    setLoadingActivities = (state: boolean) => {\r\n        this.loadingActivities = state;\r\n    }\r\n\r\n    handleFollowingChange = (username: string) => {\r\n        this.followings.forEach(profile => {\r\n            if (profile.username === username) {\r\n                profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                profile.following = !profile.following;\r\n            }\r\n        })\r\n    }\r\n\r\n    // this is called computed property\r\n    get isProfileFromCurrentUser() {\r\n        return store.userStore.user && this.profile\r\n            ? store.userStore.user.username === this.profile.username\r\n            : false;\r\n    }\r\n\r\n    load = async (username: string) => {\r\n        this.setLoading(true);\r\n\r\n        try {\r\n            this.setProfile(await agent.Profiles.details(username));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoading(false);\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.setFollowingsLoading(true);\r\n\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            this.setFollowings(followings);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setFollowingsLoading(false);\r\n    }\r\n    \r\n    loadProfileActivities = async (username: string, predicate?: string) => {\r\n        this.setLoadingActivities(true);\r\n\r\n        try {\r\n            this.setProfileActivities(await agent.Profiles.listActivities(username, predicate!));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setLoadingActivities(false);\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.setUploading(true);\r\n\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n\r\n            if (this.profile) {\r\n                this.pushProfilePhoto(photo);\r\n\r\n                if (photo.isMain && store.userStore.user) {\r\n                    store.userStore.setUserImage(photo.url);\r\n                    this.profile.image = photo.url;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setUploading(false);\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n\r\n            store.userStore.setUserImage(photo.url);\r\n\r\n            if (this.profile && this.profile.photos) {\r\n                this.setProfileMainPhoto(photo);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    update = async (profile: Partial<Profile>) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.update(profile);\r\n\r\n            if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                store.userStore.setDisplayName(profile.displayName);\r\n            }\r\n\r\n            this.setProfile({ ...this.profile, ...profile as Profile });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n\r\n            if (this.profile) {\r\n                if (this.profile.username === store.userStore.user?.username) {\r\n                    this.setProfileFollowingCount(\r\n                        following\r\n                            ? this.profile.followingCount + 1\r\n                            : this.profile.followingCount - 1);\r\n                } else if (this.profile.username === username) {\r\n                    this.setProfileFollowersCount(\r\n                        following\r\n                            ? this.profile.followersCount + 1\r\n                            : this.profile.followersCount - 1);\r\n                    this.setProfileFollowing(!this.profile.following);\r\n                }\r\n            }\r\n\r\n            this.handleFollowingChange(username);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.setMainLoading(true);\r\n\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n\r\n            this.filterProfilePhoto(photo.id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        this.setMainLoading(false);\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserLogin } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    facebookAccessToken: string | null = null;\r\n    facebookLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUser = (user: User) => {\r\n        this.user = user;\r\n    }\r\n\r\n    setUserImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n    setFacebookLoading = (state: boolean) => {\r\n        this.facebookLoading = state;\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            this.setUser(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.facebookAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    register = async (creds: UserLogin) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.setUser(user);\r\n            history.push('/activities');\r\n            store.modalStore.close();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    login = async (creds: UserLogin) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.setUser(user);\r\n            history.push('/activities');\r\n            store.modalStore.close();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.setFacebookLoading(true);\r\n\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.facebookLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.setUser(user);\r\n                this.setFacebookLoading(false);\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.setFacebookLoading(false);\r\n            })\r\n        }\r\n\r\n        if (this.facebookAccessToken) {\r\n            apiLogin(this.facebookAccessToken);\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, { scope: 'public_profile,email' })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class WidthStore {\r\n    isMobile: boolean = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsMobile = (isMobile: boolean) => {\r\n        this.isMobile = isMobile;\r\n    }\r\n\r\n    handleWindowSizeChange() {\r\n        // console.log(window.innerWidth);\r\n        // const isMobile: boolean = window.innerWidth <= 768;\r\n        // this.setIsMobile(isMobile);\r\n        this.isMobile = window.innerWidth <= 768;\r\n        console.log(this.isMobile);\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\nimport WidthStore from \"./widthStore\";\r\n\r\ninterface Store {\r\n    commonStore: CommonStore;\r\n    activityStore: ActivityStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n    widthStore: WidthStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore(),\r\n    widthStore: new WidthStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    open = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    close = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { ActivityComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    hubConnection: HubConnection | null = null;\r\n    activityComments: ActivityComment[] = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setHubConnection = (hubConnection: HubConnection) => {\r\n        this.hubConnection = hubConnection;\r\n    }\r\n\r\n    setActivityComments = (activityComments: ActivityComment[]) => {\r\n        activityComments.forEach(activityComment => {\r\n            activityComment.createdAt = new Date(activityComment.createdAt + 'Z');\r\n        })\r\n\r\n        this.activityComments = activityComments;\r\n    }\r\n\r\n    unshiftActivityComments = (activityComment: ActivityComment) => {\r\n        activityComment.createdAt = new Date(activityComment.createdAt);\r\n        this.activityComments.unshift(activityComment);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection to comments...', error))\r\n\r\n            this.hubConnection.on('LoadComments', (activityComments: ActivityComment[]) => {\r\n                this.setActivityComments(activityComments);\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (activityComment: ActivityComment) => {\r\n                this.unshiftActivityComments(activityComment);\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error trying to stop comment connection...', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.setActivityComments([]);\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Icon, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const changeLanguage = () => {\r\n        if (i18n.language === 'en') {\r\n            i18n.changeLanguage('es');\r\n        } else {\r\n            i18n.changeLanguage('en');\r\n        }\r\n    }\r\n\r\n    const { userStore: { user, logout } } = useStore();\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={ NavLink } to='/' exact header>\r\n                    <Icon name='home' size='big' />\r\n                    { isMobile ? '' : t('home') }\r\n                </Menu.Item>\r\n                <Menu.Item name={ t('events') } as={ NavLink } to='/activities' />\r\n                <Menu.Item>\r\n                    <Button\r\n                        as={ Link } to='/createActivity'\r\n                        positive content={ t('create') + (isMobile ? '' : ' ' + t('event')) }\r\n                    />\r\n                </Menu.Item>\r\n                <Menu.Item onClick={ changeLanguage }>\r\n                    { isMobile ? '' : t('change_language') }\r\n                    <img src={ '/assets/' + (i18n.language === 'en' ? 'spain_flag.png' : 'usa_flag.png') } alt='locale' style={ {marginLeft: (isMobile ? '0px' : '10px')} } />\r\n                </Menu.Item>\r\n                {/* <Menu.Item name='Error Validation Test' as={ NavLink } to='/errors' /> */}\r\n                <Menu.Item position='right'>\r\n                    <Image src={ user?.image || '/assets/user.png' } avatar spaced='right'/>\r\n                    <Dropdown pointing='top right' text={ user?.displayName }>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={ Link } to={ `/profiles/${user?.username}` } text={ t('my_profile') } icon='user' />\r\n                            <Dropdown.Item onClick={ logout } text={ t('logout') } icon='power' />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore, userStore } = useStore();\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(syntheticEvent: SyntheticEvent, username: string) {\r\n        syntheticEvent.preventDefault();\r\n        profile.following\r\n            ? profileStore.updateFollowing(username, false)\r\n            : profileStore.updateFollowing(username, true);\r\n    }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={ {width: '100%'} }>\r\n                <Button\r\n                    fluid color='teal'\r\n                    content={ (profile.following ? '' : t('not')) + ' ' + t('following') }\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={ {width: '100%'} }>\r\n                <Button\r\n                    fluid\r\n                    color={ profile.following ? 'red' : 'green' }\r\n                    content={ profile.following ? t('unfollow') : t('follow') }\r\n                    loading={ profileStore.mainLoading }\r\n                    onClick={ (mouseEvent) => handleFollow(mouseEvent, profile.username) }\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    function truncateBio(bio: string | undefined) {\r\n        if (bio) {\r\n            return bio.length > 40\r\n                ? bio.substring(0, 37) + '...'\r\n                : bio;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Image src={ profile.image || '/assets/user.png'} as={ Link } to={ `/profiles/${profile.username}` } />\r\n            <Card.Content>\r\n                <Card.Header as={ Link } to={ `/profiles/${profile.username}` }>{ profile.displayName }</Card.Header>\r\n                <Card.Description>{ truncateBio(profile.bio) }</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                { profile.followersCount + ' ' + t('follower') + (profile.followersCount === 1 ? '' : t('(s)')) }\r\n            </Card.Content>\r\n            <FollowButton profile={ profile } />\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees } : Props) {\r\n    const followingStyle = {\r\n        borderColor: 'green',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {\r\n                attendees.map(attendee => (\r\n                    <Popup on='click' key={ attendee.username } trigger={\r\n                        <List.Item key={ attendee.username }>\r\n                            <Image\r\n                                size='mini' circular bordered\r\n                                src={ attendee.image || '/assets/user.png' }\r\n                                style={ attendee.following ? followingStyle : null }\r\n                            />\r\n                        </List.Item> }\r\n                    >\r\n                        <Popup.Content>\r\n                            <ProfileCard profile={ attendee } />\r\n                        </Popup.Content>\r\n                    </Popup>))\r\n            }\r\n        </List>\r\n    )\r\n})","import { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {\r\n                    activity.isCancelled && (\r\n                        <Label attached='top' color='red' content={ t('cancelled') } style={ {textAlign: 'center'} } />\r\n                    ) \r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={ {marginBottom: 3} }size='tiny' circular src={ activity.host?.image || '/assets/user.png' } />\r\n                        <Item.Content>\r\n                            <Item.Header as={ Link } to={ `/activities/${activity.id}` }>{ activity.title }</Item.Header>\r\n                            <Item.Description>\r\n                                { t('hosted_by') } <Link to={ `profiles/${activity.hostUsername}` }>{ activity.host?.displayName }</Link>\r\n                            </Item.Description>\r\n                            {\r\n                                activity.isHost\r\n                                    ? (\r\n                                        <Item.Description>\r\n                                            <Label basic color='orange'>\r\n                                                { t('you_are_host') }\r\n                                            </Label>\r\n                                        </Item.Description>)\r\n                                    : activity.isGoing && (\r\n                                        <Item.Description>\r\n                                            <Label basic color='green'>\r\n                                                { t('you_are_going') }\r\n                                            </Label>\r\n                                        </Item.Description>)\r\n                            }\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' />{ t(\"date_detail\", { date: activity.date! }) }\r\n                    <Icon name='marker' />{ activity.venue }\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={ activity.attendees! } />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{ activity.description }</span>\r\n                <Button\r\n                    as={ Link } to={ `/activities/${activity.id}` }\r\n                    floated='right' content={ t('view') } color='teal'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n\r\n    return (\r\n        <>\r\n            { \r\n                activityStore.groupedActivities.map(([group, activities]) => (\r\n                    <Fragment key={ group }>\r\n                        <Header sub color='teal'>\r\n                            { group }\r\n                        </Header>\r\n                        { activities.map(activity => (\r\n                            <ActivityListItem key={ activity.id } activity={ activity } />\r\n                        )) }\r\n                    </Fragment>))\r\n            }\r\n        </>\r\n    )\r\n})","import Calendar from \"react-calendar\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default function ActivityFilters() {\r\n    const { t } = useTranslation();\r\n\r\n    const { activityStore: { predicate, setPredicate } } = useStore();\r\n\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item \r\n                    content={ t('all_events') }\r\n                    active={ predicate.has('all') }\r\n                    onClick={ () => setPredicate('all', 'true') }\r\n                />\r\n                <Menu.Item\r\n                    content={ t(\"you_going\") }\r\n                    active={ predicate.has('isGoing') }\r\n                    onClick={ () => setPredicate('isGoing', 'true') }\r\n                />\r\n                <Menu.Item\r\n                    content={ t(\"you_hosting\") }\r\n                    active={ predicate.has('isHost') }\r\n                    onClick={ () => setPredicate('isHost', 'true') }\r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar\r\n                onChange={ (date) => setPredicate('startDate', date as Date) }\r\n                value={ predicate.get('startDate') || new Date() }\r\n            />\r\n        </>\r\n    )\r\n}","import { Fragment } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={ {marginTop: 25} }>\r\n                <Segment.Group>\r\n                    <Segment style={ {minHeight: 110} }>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={ {minHeight: 70} } />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content={ t('view') } />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","\r\nimport { useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { pagination } = activityStore;\r\n\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    \r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        activityStore.setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        activityStore.list().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityStore.activities.size <= 1) activityStore.list();\r\n      activityStore.list();\r\n    }, [activityStore])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={ isMobile ? '16' : '10' }>\r\n                {\r\n                    activityStore.loadingInitial && !loadingNext\r\n                        ? (\r\n                            <>\r\n                                <ActivityListItemPlaceholder />\r\n                                <ActivityListItemPlaceholder />\r\n                            </>\r\n                        )\r\n                        : (\r\n                            <InfiniteScroll\r\n                                pageStart={ 1 }\r\n                                loadMore={ handleGetNext }\r\n                                hasMore={ !loadingNext && !!pagination && pagination.currentPage < pagination.totalPages }\r\n                                initialLoad={ false }\r\n                            >\r\n                                <ActivityList />\r\n                            </InfiniteScroll>\r\n                        )\r\n                }\r\n            </Grid.Column>\r\n            {\r\n                !isMobile && (\r\n\r\n                    <Grid.Column width='6'>\r\n                        <ActivityFilters />\r\n                    </Grid.Column>\r\n                )\r\n            }\r\n            <Grid.Column width='10'>\r\n                <Loader active={ loadingNext } />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function TextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <input { ...field} { ...props } />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore } = useStore();\r\n\r\n    return (\r\n        <Formik initialValues={ {email: '', password: '', error: null} } onSubmit={ (values, { setErrors }) => userStore.login(values).catch(error => setErrors({ error: t('invalid_credentials') })) }>\r\n            {\r\n                ({ handleSubmit, isSubmitting, errors }) => (\r\n                    <Form className='ui form' onSubmit={ handleSubmit } autoComplete='off'>\r\n                        <Header as='h2' content={ t('login') } color='teal' textAlign='center' />\r\n                        <TextInput name='email' placeholder={ t('email') } />\r\n                        <TextInput name='password' placeholder={ t('password') } type='password' />\r\n                        <ErrorMessage name='error' render={ () => <Label style={ {marginBottom: 10} } basic color='red' content={ errors.error }/> }/>\r\n                        <Button loading={ isSubmitting } positive content={ t('login') } type='submit' fluid />\r\n                    </Form>)\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    // errors: string[] | null;\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            { errors && (\r\n                <Message.List>\r\n                    {/* { errors.map((error: any, key) => ( */}\r\n                    { errors.map((error: any, key: any) => (\r\n                        <Message.Item key={ key }>{ error }</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore } = useStore();\r\n\r\n    return (\r\n        <Formik initialValues={ {displayName: '', username: '', email: '', password: '', error: null} } \r\n            onSubmit={ (values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error })) }\r\n            validationSchema={\r\n                Yup.object({\r\n                    displayName: Yup.string().required(t('display_name_required')),\r\n                    username: Yup.string().required(t('username_required')),\r\n                    email: Yup.string().required(t('email_required')).email(),\r\n                    password: Yup.string().required(t('password_required'))\r\n                }) \r\n            }\r\n        >\r\n            {\r\n                ({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                    <Form className='ui form error' onSubmit={ handleSubmit } autoComplete='off'>\r\n                        <Header as='h2' content={ t('sign_up') } color='teal' textAlign='center' />\r\n                        <TextInput name='displayName' placeholder={ t('display_name') } />\r\n                        <TextInput name='username' placeholder={ t('user_name') } />\r\n                        <TextInput name='email' placeholder={ t('email') } />\r\n                        <TextInput name='password' placeholder={ t('password') } type='password' />\r\n                        <ErrorMessage name='error' render={ () => <ValidationErrors errors={ errors.error } /> }/>\r\n                        <Button disabled={ !isValid || !dirty || isSubmitting }\r\n                            loading={ isSubmitting }\r\n                            positive content={ t('register') } type='submit' fluid\r\n                        />\r\n                    </Form>)\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Button, Icon, Divider } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { t } = useTranslation();\r\n  \r\n    const { userStore, modalStore } = useStore();\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead' styles={ {float: 'center'} }>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Icon name={ isMobile ? 'mobile alternate' : 'desktop' } size='massive' style={ {marginBottom: 12} } />\r\n                </Header>\r\n                {\r\n                    userStore.isLoggedIn\r\n                        ? (\r\n                            <>\r\n                                <Header as='h2' inverted content={ t('welcome') } />\r\n                                <Button as={ Link } to='/activities' size='huge' inverted>\r\n                                    { t('go_to') }\r\n                                </Button>\r\n                            </>)\r\n                        : (\r\n                            <>\r\n                                <Button onClick={ () => modalStore.open(<LoginForm />) } size='huge' inverted>\r\n                                    { t('login') }\r\n                                </Button>\r\n                                <Button onClick={ () => modalStore.open(<RegisterForm />) } size='huge' inverted>\r\n                                    { t('register') }\r\n                                </Button>\r\n                                <Divider horizontal inverted>{ t('or') }</Divider>\r\n                                <Button\r\n                                    size='huge' inverted color='facebook' content={ t('facebook_login') }\r\n                                    loading={ userStore.facebookLoading }\r\n                                    onClick={ userStore.facebookLogin }\r\n                                />\r\n                            </>)\r\n                }\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function TextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <textarea { ...field} { ...props } />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function SelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <label>{ props.label }</label>\r\n            <Select clearable \r\n                options={ props.options }\r\n                value={ field.value || null }\r\n                onChange={ (event, data) => helpers.setValue(data.value) }\r\n                onBlur={ () => helpers.setTouched(true) }\r\n                placeholder={ props.placeholder }\r\n            />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'}\r\n]","import { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\n                                        /* by using 'Partial<>' all of the properties in the props are optional.\r\n                                        This was used because giving error because not pasing 'onChange' property on 'ActivityForm',\r\n                                        but it is already established inside the 'DatePicker' here... */\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n\r\n    return (\r\n        <Form.Field error={ meta.touched && !!meta.error }>\r\n            <DatePicker\r\n                { ...field }\r\n                { ...props }\r\n                selected={ (field.value && new Date(field.value)) || null }\r\n                onChange={ value => helpers.setValue(value) }\r\n            />\r\n            {\r\n                meta.touched && meta.error\r\n                ? (<Label basic color='red'>{ meta.error }</Label>)\r\n                : null\r\n            }\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextArea from '../../../app/common/form/TextArea';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport { categoryOptions } from '../../../app/common/select_options/categoryOptions';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { useTranslation } from 'react-i18next';\r\n  \r\nexport default observer(function ActivityForm() {\r\n    const { t } = useTranslation();\r\n\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [formActivity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required(t('activity_title_required')),\r\n        description: Yup.string().required(t('activity_description_required')),\r\n        category: Yup.string().required(t('activity_category_required')),\r\n        date: Yup.string().required(t('activity_date_required')),\r\n        venue: Yup.string().required(t('activity_venue_required')),\r\n        city: Yup.string().required(t('activity_city_required'))\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) activityStore.detail(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n    }, [id, activityStore])\r\n\r\n    function handleFormSubmit(formActivity: ActivityFormValues) {\r\n        if (!formActivity.id) {\r\n            formActivity.id = uuid();\r\n\r\n            activityStore.create(formActivity).then(() => {\r\n                history.push(`/activities/${formActivity.id}`);\r\n            })\r\n        } else {\r\n            activityStore.update(formActivity).then(() => {\r\n                history.push(`/activities/${formActivity.id}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    if (activityStore.loadingInitial) return <LoadingComponent content={ t('loading_activity') } />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content={ t('activity_details') } sub color='teal' />\r\n            <Formik enableReinitialize\r\n                initialValues={ formActivity }\r\n                validationSchema={ validationSchema }\r\n                onSubmit={ values => handleFormSubmit(values) }\r\n            >\r\n                {\r\n                    ({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                        <Form className='ui form' onSubmit={ handleSubmit } autoComplete='off'>\r\n                            <TextInput placeholder={ t('title') } name='title' />\r\n                            <TextArea rows={ 3 } placeholder={ t('description') } name='description' />\r\n                            <SelectInput options={ categoryOptions } placeholder={ t('category') } name='category' />\r\n                            <DateInput placeholderText={ t('date') } name='date' showTimeSelect timeCaption='time' dateFormat='MMMM d, yyyy h:mm aa' />\r\n\r\n                            <Header content={ t('location_details') } sub color='teal' />\r\n                            <TextInput placeholder={ t('city') } name='city' />\r\n                            <TextInput placeholder={ t('venue') } name='venue' />\r\n\r\n                            <Button \r\n                                disabled={ isSubmitting || !dirty || !isValid }\r\n                                loading={ isSubmitting } \r\n                                floated='right' positive type='submit' content={ t('submit') }\r\n                            />\r\n                            <Button as={ Link } to='/activities' floated='right' type='button' content={ t('cancel') } />\r\n                        </Form>)\r\n                }\r\n            </Formik>\r\n\r\n        </Segment>\r\n    );\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId])\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={ {border: 'none'} }\r\n            >\r\n            <Header>{ t('comments') }</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik\r\n                    onSubmit={ (values, { resetForm }) => commentStore.addComment(values).then(() => resetForm()) }\r\n                    initialValues={ {body: ''} }\r\n                    validationSchema={ Yup.object({\r\n                        body: Yup.string().required()\r\n                    }) }\r\n                >\r\n                {\r\n                    ({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {\r\n                                    (props : FieldProps) => (\r\n                                    <div style={ {position: 'relative'} }>\r\n                                        <Loader active={ isSubmitting } />\r\n                                        <textarea \r\n                                            placeholder={ t('type_comment') }\r\n                                            rows={ 2 }\r\n                                            { ...props.field }\r\n                                            onKeyPress={ keyboardEvent => {\r\n                                                if (keyboardEvent.key === 'Enter')\r\n                                                {\r\n                                                    if (keyboardEvent.shiftKey) \r\n                                                    {\r\n                                                        return;\r\n                                                    }\r\n                                                    else\r\n                                                    {\r\n                                                        keyboardEvent.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>) \r\n                                }\r\n                            </Field>\r\n                        </Form>\r\n                    )\r\n                }\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {\r\n                        commentStore.activityComments.map(comment => (\r\n                            <Comment key={ comment.id }>\r\n                                <Comment.Avatar src={ comment.image || '/assets/user.png' } />\r\n                                <Comment.Content>\r\n                                    <Comment.Author as={ Link } to={ `/profiles/${comment.username}` }>{ comment.displayName }</Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        <div>{ t(\"date_distance\", { date: comment.createdAt }) }</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text style={ {whiteSpace: 'pre-wrap'} }>{ comment.body }</Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ))\r\n                    }\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { activityStore } = useStore();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={ {padding: '0'} }>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={ activityImageStyle }/>\r\n                {\r\n                    activity.isCancelled && (\r\n                        <Label style={ {position: 'absolute', zIndex: 1000, left: -14, top: 20} } ribbon color='red' content={ t('cancelled') } />\r\n                    )\r\n                }\r\n                <Segment style={ activityImageTextStyle } basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={ activity.title }\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                { activity.date && (\r\n                                    <p>{ t(\"date_store\", { date: activity.date! }) }</p>)\r\n                                }\r\n                                <p>\r\n                                    { t('hosted_by') } <strong><Link to={ `/profiles/${activity.host?.username}` }>{ activity.host?.displayName }</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                { activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            onClick={ activityStore.cancel }\r\n                            loading={ activityStore.loading }\r\n                            color={ activity.isCancelled ? 'green' : 'red' }\r\n                            floated='right' content={ activity.isCancelled ? t('reactivate_activity') : t('cancel_event') }\r\n                        />\r\n                        <Button\r\n                            disabled={ activity.isCancelled } \r\n                            as={ Link } to={ `/edit/${activity.id}` }\r\n                            color='orange' floated='right'\r\n                        >\r\n                            { t('manage_event') }\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing\r\n                    ? (\r\n                        <Button loading={ activityStore.loading } onClick={ activityStore.attend }>{ t('cancel_attendance') }</Button>\r\n                    ) : (\r\n                        <Button disabled={ activity.isCancelled } loading={ activityStore.loading } onClick={ activityStore.attend } color='teal'>{ t('join_activity') }</Button>\r\n                    ) }\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    const { t } = useTranslation();\r\n  \r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width='1'>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                        <p>{ activity.description }</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width='1'>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                    {\r\n                        activity.date && (\r\n                            <span>\r\n                                { t(\"date_detail\", { date: activity.date! }) }\r\n                            </span>)\r\n                    }\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width='1'>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width='11'>\r\n                        <span>{ activity.venue }, { activity.city }</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    if (!attendees) return null;\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                { attendees.length } { attendees.length === 1 ? t('person') : t('people') } { t('going') }\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {\r\n                        attendees.map(attendee => (\r\n                            <Item style={ {position: 'relative'} } key={ attendee.username }>\r\n                                {\r\n                                    attendee.username === host?.username && (\r\n                                        <Label\r\n                                        style={ {position: 'absolute'} }\r\n                                        color='orange'\r\n                                        ribbon='right'\r\n                                        >\r\n                                        { t('host') }\r\n                                        </Label>) \r\n                                }\r\n                                <Image size='tiny' src={ attendee.image || '/assets/user.png' } />\r\n                                <Item.Content verticalAlign='middle'>\r\n                                    <Item.Header as='h3'>\r\n                                        <Link to={ `/profiles/${attendee.username}` }>{ attendee.displayName }</Link>\r\n                                    </Item.Header>\r\n                                    {\r\n                                        attendee.following && (\r\n                                            <Item.Extra style={ {color: 'orange'} }>{ t('following') }</Item.Extra>)\r\n                                    }\r\n                                </Item.Content>\r\n                            </Item>))\r\n                    }\r\n                </List>\r\n            </Segment>\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { t } = useTranslation();\r\n\r\n  const { activityStore } = useStore();\r\n  const { selectedActivity: activity } = activityStore;\r\n  const { id } = useParams<{id: string}>();\r\n\r\n  const [width, setWidth] = useState<number>(window.innerWidth);\r\n  function handleWindowSizeChange() {\r\n      setWidth(window.innerWidth);\r\n  }\r\n  useEffect(() => {\r\n      window.addEventListener('resize', handleWindowSizeChange);\r\n      return () => {\r\n          window.removeEventListener('resize', handleWindowSizeChange);\r\n      }\r\n  }, []);\r\n  \r\n  let isMobile: boolean = (width <= 768);\r\n\r\n  useEffect(() => {\r\n    if (id) activityStore.detail(id);\r\n    return () => activityStore.setSelectedActivity(undefined);\r\n  }, [id, activityStore]);\r\n\r\n  if (activityStore.loadingInitial || !activity) return <LoadingComponent content={ t('fetching_activity') } />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={ isMobile ? '16' : '10' }>\r\n        <ActivityDetailedHeader activity={ activity }/>\r\n        <ActivityDetailedInfo  activity={ activity }/>\r\n        <ActivityDetailedChat activityId={ activity.id } />\r\n      </Grid.Column>\r\n      {\r\n        !isMobile && (\r\n          <Grid.Column width='6'>\r\n            <ActivityDetailedSidebar activity={ activity }/>\r\n          </Grid.Column>\r\n        )\r\n      }\r\n    </Grid>\r\n  );\r\n})","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    const { t } = useTranslation();\r\n  \r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                { t('oops_404') }\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={ Link } to='/activities' primary >\r\n                    { t('return_to_activities') }\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n    const { commonStore } = useStore();\r\n    \r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={ commonStore.error?.message } />\r\n            {\r\n                commonStore.error && (\r\n                    <Segment>\r\n                        <Header as='h4' content='Stack trace' color='teal' />\r\n                        <code style={{ marginTop: '10px' }}>{ commonStore.error }</code>\r\n                    </Segment>)\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\"\r\n\r\nexport default observer(function ModalContainer() {\r\n    const { modalStore } = useStore();\r\n\r\n    return (\r\n        <Modal open={ modalStore.modal.open } onClose={ modalStore.close } size='mini'>\r\n            <Modal.Content>\r\n                { modalStore.modal.body }\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport TextArea from \"../../app/common/form/TextArea\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { profile } = profileStore;\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ {displayName: profile?.displayName, bio: profile?.bio} }\r\n            onSubmit={ values => {\r\n                profileStore.update(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            } }\r\n            validationSchema={ Yup.object({\r\n                displayName: Yup.string().required(t('display_name_required'))\r\n            }) }\r\n        >\r\n            {\r\n                ({ isSubmitting, isValid, dirty }) => (\r\n                <Form className='ui form'>\r\n                    <TextInput placeholder={ t('display_name') } name='displayName' />\r\n                    <TextArea rows={3} placeholder={ t('add_bio') } name='bio' />\r\n                    <Button \r\n                        positive\r\n                        type='submit'\r\n                        loading={ isSubmitting }\r\n                        content={ t('update_profile') }\r\n                        floated='right'\r\n                        disabled={ !isValid || !dirty }\r\n                    />\r\n                </Form>)\r\n            }\r\n        </Formik>\r\n    )\r\n})","import { useState } from 'react';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { isProfileFromCurrentUser, profile } = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={ t('about') + ` ${profile?.displayName}` } />\r\n                    {\r\n                        isProfileFromCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={ editMode ? t('cancel') : t('edit_profile') }\r\n                            onClick={ () => setEditMode(!editMode) }\r\n                        />)\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {\r\n                        editMode\r\n                            ? <ProfileEditForm setEditMode={ setEditMode } />\r\n                            : <span style={ {whiteSpace: 'pre-wrap'} }>{ profile?.bio }</span>\r\n                    }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProfileActivity } from '../../app/models/profile';\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadProfileActivities,\r\n        profile,\r\n        loadingActivities,\r\n        profileActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfileActivities(profile!.username);\r\n    }, [loadProfileActivities, profile]);\r\n\r\n    const handleTabChange = (syntheticEvent: SyntheticEvent, tabProps: TabProps) => {\r\n        loadProfileActivities(profile!.username, panes[tabProps.activeIndex as number].pane.key);\r\n    };\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    const panes = [\r\n        { menuItem: t('future_events'), pane: { key: 'future' } },\r\n        { menuItem: t('hosting'), pane: { key: 'hosting' } },\r\n        { menuItem: t('past_events'), pane: { key: 'past' } }\r\n    ];\r\n\r\n    return (\r\n        <Tab.Pane loading={ loadingActivities }>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='calendar' content={ t('events') } />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Tab\r\n                        panes={ panes }\r\n                        menu={ {secondary: true, pointing: true} }\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={ isMobile ? '2' : '4' }>\r\n                    {\r\n                        profileActivities.map((activity: ProfileActivity) => (\r\n                            <Card\r\n                                as={ Link }\r\n                                to={ `/activities/${activity.id}` }\r\n                                key={ activity.id }\r\n                            >\r\n                                <Image\r\n                                    src={ `/assets/categoryImages/${activity.category}.jpg` }\r\n                                    style={ {minHeight: 100, objectFit: 'cover'} }\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{ activity.title }</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{ t(\"date_daymonth\", { date: new Date(activity.date) }) }</div>\r\n                                        <div>{ t(\"date_hour\", { date: new Date(activity.date) }) }</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const { profile } = profileStore;\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    \r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Tab.Pane loading={ profileStore.followingsLoading }>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header\r\n                        floated='left' icon='user'\r\n                        content=\r\n                        {\r\n                            t('people') + ' ' + (profileStore.activeTab === 3 \r\n                                ? t('following_to') + ` ${profile?.displayName}`\r\n                                : `${profile?.displayName} ` + t('is_following'))\r\n                        }\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Card.Group itemsPerRow={ isMobile ? '2' : '4' }>\r\n                        {\r\n                            profileStore.followings.map(profile => (\r\n                                <ProfileCard key={ profile.username } profile={ profile } />))\r\n                        }\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles } : Props) {\r\n  const dropzoneDefaultStyle = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  }\r\n\r\n  const dropzoneActiveStyle = {\r\n    borderColor: 'green'\r\n  }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <div { ...getRootProps() } style={ isDragActive ? { ...dropzoneDefaultStyle, ...dropzoneActiveStyle } : dropzoneDefaultStyle }>\r\n      <input { ...getInputProps() } />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n      {/* {\r\n        isDragActive\r\n          ? <p>Drop the files here ...</p>\r\n          : <p>Drag 'n' drop some files here, or click to select files</p>\r\n      } */}\r\n    </div>\r\n  )\r\n}","import { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    setCropper: (cropper: Cropper) => void;\r\n    imagePreview: string;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ setCropper, imagePreview } : Props) {\r\n    return (\r\n        <Cropper\r\n            src={ imagePreview }\r\n            style={ {height: 200, width: '100%'} }\r\n            initialAspectRatio={ 1 }\r\n            aspectRatio={ 1 }\r\n            preview='.img-preview'\r\n            guides={ false }\r\n            viewMode={ 1 }\r\n            autoCropArea={ 1 }\r\n            background={ false }\r\n            onInitialized={ (cropper: Cropper) => setCropper(cropper) }\r\n        />\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\ninterface Props {\r\n    uploadPhoto: (file: Blob) => void;\r\n    loading: boolean;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ uploadPhoto, loading } : Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => {\r\n                URL.revokeObjectURL(file.preview);\r\n            });\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='4'>\r\n                <Header color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropzone setFiles={ setFiles }/>\r\n            </Grid.Column>\r\n            <Grid.Column width='1' />\r\n            <Grid.Column width='4'>\r\n                <Header color='teal' content='Step 2 - Resize' />\r\n                {\r\n                    files && files.length > 0 && (\r\n                        <PhotoWidgetCropper setCropper={ setCropper } imagePreview={ files[0].preview } />\r\n                    )\r\n                }\r\n            </Grid.Column>\r\n            <Grid.Column width='1' />\r\n            <Grid.Column width='4'>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n                {\r\n                    files && files.length > 0 && (\r\n                        <>\r\n                            <div className='img-preview' style={ {minHeight: 200, overflow: 'hidden'} } />\r\n                            <Button.Group widths={ 2 }>\r\n                                <Button loading={ loading } onClick={ onCrop } positive icon='check' />\r\n                                <Button disabled={ loading } onClick={ () => setFiles([]) } icon='close' />\r\n                            </Button.Group>\r\n                        </>)\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Card, Container, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/image_upload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile} : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n    const [target, setTarget] = useState('');\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        profileStore.uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, syntheticEvent: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(syntheticEvent.currentTarget.name);\r\n        profileStore.setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, syntheticEvent: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(syntheticEvent.currentTarget.name);\r\n        profileStore.deletePhoto(photo);\r\n    }\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='image' content={ t('photos') } />\r\n                    {\r\n                        profileStore.isProfileFromCurrentUser && (\r\n                            <Button\r\n                                floated='right' basic\r\n                                content={ addPhotoMode ? t('cancel') : t('add_photo') }\r\n                                onClick={ () => setAddPhotoMode(!addPhotoMode) }\r\n                            />)\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                {\r\n                    addPhotoMode \r\n                        ? (\r\n                            <PhotoUploadWidget uploadPhoto={ handlePhotoUpload } loading={ profileStore.uploading }/>)\r\n                        : (\r\n                            <Card.Group itemsPerRow={ isMobile ? '2' : '3' }>\r\n                                { profile.photos?.map(photo => (\r\n                                    <Card key={ photo.id }>\r\n                                        <Image src={ photo.url } />\r\n                                        {\r\n                                            !photo.isMain \r\n                                                ? profileStore.isProfileFromCurrentUser && (\r\n                                                    <Button.Group fluid widths={ 2 }>\r\n                                                        <Button\r\n                                                            basic\r\n                                                            color='green'\r\n                                                            content={ t('main') }\r\n                                                            name={ 'setMainPhotoButton' + photo.id }\r\n                                                            disabled={ photo.isMain }\r\n                                                            loading={ target === 'setMainPhotoButton' + photo.id && profileStore.mainLoading }\r\n                                                            onClick={ mouseEvent => handleSetMainPhoto(photo, mouseEvent) }\r\n                                                        />\r\n                                                        <Button\r\n                                                            basic\r\n                                                            color='red'\r\n                                                            icon='trash'\r\n                                                            name={ 'deletePhotoButton' + photo.id }\r\n                                                            disabled={ photo.isMain }\r\n                                                            loading={ target === 'deletePhotoButton' + photo.id && profileStore.mainLoading }\r\n                                                            onClick={ mouseEvent => handleDeletePhoto(photo, mouseEvent) }\r\n                                                        />\r\n                                                    </Button.Group>)\r\n                                                : (\r\n                                                    <Container style={ {marginTop: '7px'} } textAlign='center'>\r\n                                                        <p>{ t('current_photo') }</p>\r\n                                                    </Container>\r\n                                                )\r\n                                        }\r\n                                    </Card>\r\n                                )) }\r\n                            </Card.Group>)\r\n                }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { Tab } from \"semantic-ui-react\"\r\nimport { Profile } from \"../../app/models/profile\"\r\nimport { useStore } from \"../../app/stores/store\"\r\nimport ProfileAbout from \"./ProfileAbout\"\r\nimport ProfileActivities from \"./ProfileActivities\"\r\nimport ProfileFollowings from \"./ProfileFollowings\"\r\nimport ProfilePhotos from \"./ProfilePhotos\"\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileBody({profile} : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    const { profileStore } = useStore();\r\n\r\n    const panes = [\r\n        { menuItem: t('about'), render: () => <ProfileAbout /> },\r\n        { menuItem: t('photos'), render: () => <ProfilePhotos profile={ profile } /> },\r\n        { menuItem: t('events'), render: () => <ProfileActivities /> },\r\n        { menuItem: t('followers'), render: () => <ProfileFollowings /> },\r\n        { menuItem: t('following'), render: () => <ProfileFollowings /> }\r\n    ]\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    \r\n    let isMobile: boolean = (width <= 768);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isMobile\r\n                    ? (\r\n                        <Tab\r\n                            menu={ {fluid: true } }\r\n                            panes={ panes }\r\n                            onTabChange={ (mouseEvent, tabProps) => profileStore.setActiveTab(tabProps.activeIndex) }\r\n                        />)\r\n                    : (\r\n                        <Tab\r\n                        menu={ {fluid: true, vertical: true} }\r\n                        menuPosition='right'\r\n                        panes={ panes }\r\n                        onTabChange={ (mouseEvent, tabProps) => profileStore.setActiveTab(tabProps.activeIndex) }\r\n                    />)\r\n            }\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile } : Props) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width='10'>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={ profile?.image || '/assets/user.png' } />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={ profile?.displayName } />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width='1' />\r\n                <Grid.Column width='4'>\r\n                    <Statistic.Group widths='2'>\r\n                        <Statistic\r\n                            label={ profile.followersCount === 1 ? t('follower') : t('followers') } \r\n                            value={ profile.followersCount }\r\n                        />\r\n                        <Statistic label={ t('following') } value={ profile.followingCount } />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={ profile } />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileBody from \"./ProfileBody\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { t } = useTranslation();\r\n\r\n    const { username } = useParams<{ username: string }>();\r\n    const { profileStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        profileStore.load(username);\r\n        return () => {\r\n            profileStore.setActiveTab(0);\r\n        }\r\n    }, [profileStore, username])\r\n\r\n    if (profileStore.loading) return <LoadingComponent content={ t('loading_profile') } />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='16'>\r\n                {\r\n                    profileStore.profile && (\r\n                        <>\r\n                            <ProfileHeader profile={ profileStore.profile } />\r\n                            <ProfileBody profile={ profileStore.profile } />\r\n                        </>)\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...routeProps }: Props) {\r\n    const { userStore: { isLoggedIn } } = useStore();\r\n\r\n    return (\r\n        <Route\r\n            { ...routeProps }\r\n            render={ (routeComponentProps) => isLoggedIn ? <Component { ...routeComponentProps } /> : <Redirect to='/' /> }\r\n        />\r\n    )\r\n}","import { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n// import TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nimport { useTranslation } from 'react-i18next';\n\nfunction App() {\n  const { t } = useTranslation();\n\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content={ t('loading_sample_app') } />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={ HomePage } />\n      <Route\n        path={ '/(.+)' }\n        render={ () => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ ActivityDashboard } />\n                <PrivateRoute path='/activities/:id' component={ ActivityDetails } />\n                <PrivateRoute key={ location.key } path={ ['/createActivity', '/edit/:id'] } component={ ActivityForm } />\n                <PrivateRoute path='/profiles/:username' component={ ProfilePage } />\n                {/* <PrivateRoute path='/errors' component={ TestErrors } /> */}\n                <Route path='/server-error' component={ ServerError } />\n                {/* <Route path='/login' component={ LoginForm } /> */}\n                <Route component={ NotFound } />\n                {/* <Route component={ HomePage } /> */}\n              </Switch>\n            </Container>\n          </>) }\n      />\n    </>\n  );\n}\n\nexport default observer(App);","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname])\r\n\r\n    return null;\r\n}","import i18next from \"i18next\";\r\nimport I18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\r\nimport I18NextHttpBackend from \"i18next-http-backend\";\r\nimport { format as formatDate, formatDistanceToNow, isDate } from \"date-fns\";\r\nimport { en, es } from \"date-fns/locale\";\r\n\r\nconst locales = { en, es };\r\n\r\ni18next.use(I18NextHttpBackend).use(I18nextBrowserLanguageDetector).init({\r\n    fallbackLng: 'es',\r\n    debug: false,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        cache: ['cookie'],\r\n    },\r\n    interpolation: {\r\n        format: (value, format) => {\r\n            if (isDate(value)) {\r\n                const locale = locales[i18next.language];\r\n                switch (format) {\r\n                    case \"detail\":\r\n                        return formatDate(value, \"dd MMM yyyy h:mm aa\", { locale });\r\n                    case \"store\":\r\n                        return formatDate(value, \"dd MMM yyyy\", { locale });\r\n                    case \"distance\":\r\n                        return formatDistanceToNow(value, { locale });\r\n                    case \"daymonth\":\r\n                        return formatDate(value, 'do LLL', { locale });\r\n                    case \"hour\":\r\n                        return formatDate(value, 'h:mm a', { locale });\r\n                    default:\r\n                        return formatDate(value, format, { locale });\r\n                }\r\n            } else {\r\n                return value;\r\n            }\r\n        },\r\n        escapeValue: false\r\n    }\r\n});\r\n\r\nexport default i18next;","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/index.css';\nimport App from './app/layout/App';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nimport { Suspense } from 'react';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={ store }>\n    <Router history={ history }>\n      <ScrollToTop />\n      <I18nextProvider i18n={i18n}>\n        <Suspense fallback={ <div>Loading...</div> }>\n          <App />\n        </Suspense>\n      </I18nextProvider>\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}